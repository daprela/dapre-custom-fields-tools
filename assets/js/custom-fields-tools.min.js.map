{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/js/add-remove-meta-row.js","webpack:///./src/js/components/Arrow.js","webpack:///./src/js/components/FieldID.js","webpack:///./src/js/components/FieldName.js","webpack:///./src/js/components/MetaFieldActions.js","webpack:///./src/js/components/MetaFieldCurrentValue.js","webpack:///./src/js/components/MetaFieldCurrentValueOptions.js","webpack:///./src/js/components/MetaFieldPreviousValue.js","webpack:///./src/js/components/MetaFieldValueToAdd.js","webpack:///./src/js/components/OptionsMetaHeaders.js","webpack:///./src/js/components/OptionsMetaRow.js","webpack:///./src/js/components/PostsMetaHeaders.js","webpack:///./src/js/components/PostsMetaRow.js","webpack:///./src/js/components/UsersMetaHeaders.js","webpack:///./src/js/components/UsersMetaRow.js","webpack:///./src/js/controller.js","webpack:///./src/js/copy-meta-ui.js","webpack:///./src/js/functions.js","webpack:///./src/js/meta-box-ui.js","webpack:///./src/js/option-meta-actions.js","webpack:///./src/js/post-meta-actions.js","webpack:///./src/js/tab-navigation.js","webpack:///./src/js/tab-options-meta.js","webpack:///./src/js/tab-posts-meta.js","webpack:///./src/js/tab-users-meta.js","webpack:///./src/js/tabs-render.js","webpack:///./src/js/user-meta-actions.js","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":["wp","apiFetch","optionSection","document","querySelector","userMetaSection","postMetaSection","refreshOptionArrows","optionRows","Array","from","querySelectorAll","positionRow","optionRow","index","arrow","style","top","offsetTop","offsetHeight","length","innerHTML","title","forEach","refreshUserArrows","userRows","userRow","refreshPostArrows","postRows","postRow","addArrows","removeOptionRow","elementRow","path","submitOptionsButton","elementToRemove","nextElementSibling","remove","rows","options","row","dataset","push","removeJSON","JSON","stringify","spinnerOn","disabled","method","body","parse","headers","then","response","json","fields","blur","spinnerOff","error","addOptionRow","table","parentElement","oldRow","newRow","cloneNode","Number","optionName","value","name","classList","fieldErrorMessage","add","emptyArrayCheckbox","checked","dateStringCheckbox","metaFieldInputValue","fieldCurrentValue","currentValueDateToggle","currentValueDateToggleCheckbox","fieldPreviousValue","appendChild","addJSON","removeUserRow","submitUserButton","metaFields","addUserRow","fieldID","fieldName","removePostRow","submitPostButton","addPostRow","checkOptionEvent","e","element","target","restBase","updateBase","nameSpace","contains","innerText","checkUserEvent","checkPostEvent","window","addEventListener","Arrow","props","className","content","harrowClickProp","arrowClick","arrowRef","createRef","useEffect","current","handleArrowClick","FieldID","inputValue","updateFieldID","fieldIDValue","inputName","inputType","inputClass","errorClassName","errorMessageClassName","errorMessage","action","useState","setFieldIDValue","actionRef","updateFieldIDValue","useCallback","FieldName","updateFieldName","fieldNameValue","setFieldNameValue","updateFieldNameValue","MetaFieldActions","dataIndex","onChangeProp","onChange","resetPage","restoreEvent","disableWrite","disableDelete","setAction","readChecked","setReadChecked","writeChecked","setWriteChecked","deleteChecked","setDeleteChecked","readRef","useRef","writeRef","delRef","actionSet","click","MetaFieldCurrentValue","currentValue","MetaFieldCurrentValueOptions","curValueDateToggle","setCurValueDateToggle","isDate","MetaFieldPreviousValue","previousValue","MetaFieldValueToAdd","timeStampBackup","setTimeStampBackup","inputStringBackup","setInputStringBackup","emptyArrayRef","toggleDateRef","textAreaRef","valueOptionsClass","valueOptionsLabelClass","textAreaClass","emptyArrayChange","emptyArray","updateValueToAdd","valueToAdd","toggleDate","isInteger","timestamp","myDate","Date","parseInt","toUTCString","dateString","valueOf","textAreaContent","__","i18n","OptionsMetaHeaders","OptionsMetaRow","rowIndex","errorClass","arrowTitle","arrowContent","updateForm","rowChange","arrowClickProp","addEmptyArray","setAddEmptyArray","valueToWrite","setValueToWrite","currentValuePrinted","setCurrentValuePrinted","classColor","setClassColor","currentValueOptionsTimestampBackup","setCurrentValueOptionsTimestampBackup","currentValueOptionsDateBackup","setCurrentValueOptionsDateBackup","updateValueToWrite","textAreaValue","updateEmptyArrayChange","checkboxState","updateAction","toggleDateCurrentValue","PostsMetaHeaders","PostsMetaRow","currentValuePostsTimestampBackup","setCurrentValuePostsTimestampBackup","currentValuePostsDateBackup","setCurrentValuePostsDateBackup","UsersMetaHeaders","UsersMetaRow","currentValueUsersTimestampBackup","setCurrentValueUsersTimestampBackup","currentValueUsersDateBackup","setCurrentValueUsersDateBackup","copyOptionSection","copyUserMetaSection","copyPostMetaSection","optionToUserField","optionToOption","optionToPostField","userFieldToUserField","userFieldToOption","userFieldToPostField","postFieldToUserField","postFieldToOption","postFieldToPostField","slideUp","slideDown","copyOptionDestinations","copyUserFieldDestination","copyPostFieldDestination","isNumber","o","isNaN","isNormalInteger","str","test","isPositiveInteger","date","spinner","changeFieldColor","parentNode","toggleDateCheckbox","arrayCheckbox","newValueOptions","inputBox","dateTimestampBackup","dateStringBackup","dateInt","alert","curValueDateString","fieldContent","checkEvent","preventDefault","renameOptionsButton","copyOptionsButton","read","write","del","finishedWrite","finishedRead","finishedDel","renameBase","copyBase","getWriteFields","newValue","getDeleteFields","getReadFields","refreshPage","field","fieldErrorClass","readData","readJSON","writeData","writeJSON","deleteData","delJSON","getMetaForm","fieldAction","refreshRenamePage","lightbox","oldOption","newOption","renamed","Lightbox","openAnimation","closeAnimation","setTitle","setContent","message","open","getRenameForm","oldOptionName","newOptionName","rename","renameJSON","refreshCopyPage","copySelection","checkboxCreate","userID","userField","postID","postField","currentOption","copied","getCopyForm","copy","copyJSON","submitPostFieldsButton","renamePostFieldsButton","copyPostFieldsButton","readFields","oldFieldName","newFieldName","currentPostID","currentPostField","currentFieldName","tab1","tab2","tab3","optionsForm","userFieldsForm","postFieldsForm","hideOptionsTab","hideUsersTab","hidePostsTab","switchToOptionsTab","switchToUsersTab","switchToPostsTab","TabOptionsMeta","setRows","form","setForm","setResetPage","submitOptionsButtonRef","newOptions","concat","sortedOptions","sort","a","b","dataToRead","dataToWrite","dataToDelete","submitOptions","readLocal","writeLocal","delLocal","newRead","newWrite","newDel","option","requestSubmit","formTemp","map","formRow","temp","regenerateForm","newRows","newForm","addRemoveMetaRows","newPath","lastElement","newIndex","rowErrorClass","findIndex","splice","TabPostsMeta","submitPostsButtonRef","newPostsMeta","sortedPosts","submitPostsMeta","posts","post","TabUsersMeta","submitUsersButtonRef","newUsersMeta","sortedUsers","submitUsersMeta","users","user","render","submitUserFieldsButton","renameUserFieldsButton","copyUserFieldsButton","currentUserID","currentUserField"],"mappings":"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","file":"./assets/js/custom-fields-tools.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/controller.js\");\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/* eslint-disable function-paren-newline */\r\n// eslint-disable import/extensions\r\nimport { spinnerOn, spinnerOff, nameSpace } from './functions.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst optionSection = document.querySelector('.js-optionsMetaSection');\r\nconst userMetaSection = document.querySelector('.js-userFieldsSection');\r\nconst postMetaSection = document.querySelector('.js-postFieldsSection');\r\n\r\nexport function refreshOptionArrows() {\r\n  return;\r\n  const optionRows = Array.from(document.querySelectorAll('.js-optionFieldDataRow'));\r\n\r\n  function positionRow(optionRow, index) {\r\n    const arrow = optionRow.querySelector('.js-addRemoveOptionRow');\r\n    arrow.style.top = `${optionRow.offsetTop + optionRow.offsetHeight - 10}px`;\r\n    if (index < optionRows.length - 1) {\r\n      arrow.innerHTML = '-';\r\n      arrow.title = 'Remove the next row';\r\n    } else {\r\n      arrow.innerHTML = '+';\r\n      arrow.title = 'Add another row';\r\n    }\r\n  }\r\n\r\n  optionRows.forEach(positionRow);\r\n}\r\n\r\nexport function refreshUserArrows() {\r\n  const userRows = Array.from(document.querySelectorAll('.js-userFieldsDataRow'));\r\n\r\n  function positionRow(userRow, index) {\r\n    const arrow = userRow.querySelector('.js-addRemoveUserRow');\r\n    arrow.style.top = `${userRow.offsetTop + userRow.offsetHeight - 10}px`;\r\n    if (index < userRows.length - 1) {\r\n      arrow.innerHTML = '-';\r\n      arrow.title = 'Remove the next row';\r\n    } else {\r\n      arrow.innerHTML = '+';\r\n      arrow.title = 'Add another row';\r\n    }\r\n  }\r\n\r\n  userRows.forEach(positionRow);\r\n}\r\n\r\nexport function refreshPostArrows() {\r\n  const postRows = Array.from(document.querySelectorAll('.js-postFieldsDataRow'));\r\n\r\n  function positionRow(postRow, index) {\r\n    const arrow = postRow.querySelector('.js-addRemovePostRow');\r\n    arrow.style.top = `${postRow.offsetTop + postRow.offsetHeight - 10}px`;\r\n    if (index < postRows.length - 1) {\r\n      arrow.innerHTML = '-';\r\n      arrow.title = 'Remove the next row';\r\n    } else {\r\n      arrow.innerHTML = '+';\r\n      arrow.title = 'Add another row';\r\n    }\r\n  }\r\n\r\n  postRows.forEach(positionRow);\r\n}\r\n\r\nfunction addArrows() {\r\n  refreshOptionArrows();\r\n  refreshUserArrows();\r\n  refreshPostArrows();\r\n}\r\n\r\nfunction removeOptionRow(elementRow, path) {\r\n  const submitOptionsButton = document.querySelector('.js-submitOptions');\r\n  const elementToRemove = elementRow.nextElementSibling;\r\n\r\n  elementToRemove.remove();\r\n  refreshOptionArrows();\r\n\r\n  const rows = document.querySelectorAll('.js-optionFieldDataRow');\r\n\r\n  const options = [];\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const row of rows) {\r\n    const { index } = row.dataset;\r\n    options.push(index);\r\n  }\r\n  const removeJSON = JSON.stringify(options);\r\n  spinnerOn();\r\n  submitOptionsButton.disabled = true;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'DELETE',\r\n    body: removeJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      submitOptionsButton.disabled = false;\r\n      submitOptionsButton.blur();\r\n      spinnerOff();\r\n      if (fields.error) {\r\n\r\n      }\r\n    });\r\n}\r\n\r\nfunction addOptionRow(elementRow, path) {\r\n  const table = elementRow.parentElement;\r\n  const oldRow = document.querySelector('.js-optionFieldDataRow[data-index=\"0\"]');\r\n  const newRow = oldRow.cloneNode(true);\r\n\r\n  newRow.dataset.index = Number(elementRow.dataset.index) + 1;\r\n\r\n  const optionName = newRow.querySelector('.js-optionFieldName');\r\n  optionName.value = '';\r\n  optionName.name = `field_name[${newRow.dataset.index}]`;\r\n\r\n  // start removing the content of the previous row\r\n  newRow.classList.remove('is-error');\r\n  newRow.querySelector('.js-fieldAction[value=\"read\"]').disabled = false;\r\n  newRow.querySelector('.js-fieldAction[value=\"write\"]').disabled = true;\r\n  newRow.querySelector('.js-fieldAction[value=\"delete\"]').disabled = true;\r\n\r\n  newRow.querySelector('.js-fieldAction[value=\"read\"]').name = `field_action[${newRow.dataset.index}]`;\r\n  newRow.querySelector('.js-fieldAction[value=\"write\"]').name = `field_action[${newRow.dataset.index}]`;\r\n  newRow.querySelector('.js-fieldAction[value=\"delete\"]').name = `field_action[${newRow.dataset.index}]`;\r\n\r\n  // manages the error message\r\n  const fieldErrorMessage = newRow.querySelector('.js-fieldErrorMessage');\r\n  fieldErrorMessage.innerHTML = '';\r\n  fieldErrorMessage.classList.add('is-hidden');\r\n\r\n  // manages the empty array checkbox\r\n  const emptyArrayCheckbox = newRow.querySelector('.js-emptyArray');\r\n  emptyArrayCheckbox.checked = false;\r\n  emptyArrayCheckbox.disabled = true;\r\n  emptyArrayCheckbox.name = `empty_array[${newRow.dataset.index}]`;\r\n\r\n  // manages the date string checkbox\r\n  const dateStringCheckbox = newRow.querySelector('.js-dateString');\r\n  dateStringCheckbox.checked = false;\r\n  dateStringCheckbox.disabled = true;\r\n  dateStringCheckbox.name = `date_string[${newRow.dataset.index}]`;\r\n\r\n  // input value box\r\n  const metaFieldInputValue = newRow.querySelector('.js-metaFieldInputValue');\r\n  metaFieldInputValue.value = '';\r\n  metaFieldInputValue.disabled = true;\r\n  metaFieldInputValue.name = `field_value[${newRow.dataset.index}]`;\r\n\r\n  // Current value\r\n  const fieldCurrentValue = newRow.querySelector('.js-fieldCurrentValue');\r\n  fieldCurrentValue.innerHTML = '';\r\n\r\n  // Current value date-string option\r\n  const currentValueDateToggle = newRow.querySelector('.js-curValueDateToggle');\r\n  currentValueDateToggle.classList.remove('is-visible');\r\n  currentValueDateToggle.classList.add('is-hidden');\r\n\r\n  const currentValueDateToggleCheckbox = newRow.querySelector('.js-fieldDateStringCurValue');\r\n  currentValueDateToggleCheckbox.name = `date_string_show[${newRow.dataset.index}]`;\r\n\r\n  // Previous value\r\n  const fieldPreviousValue = newRow.querySelector('.js-fieldPreviousValue');\r\n  fieldPreviousValue.innerHTML = '';\r\n\r\n  table.appendChild(newRow);\r\n  refreshOptionArrows();\r\n\r\n  const submitOptionsButton = document.querySelector('.js-submitOptions');\r\n\r\n  const addJSON = JSON.stringify(newRow.dataset.index);\r\n  spinnerOn();\r\n  submitOptionsButton.disabled = true;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'POST',\r\n    body: addJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      submitOptionsButton.disabled = false;\r\n      submitOptionsButton.blur();\r\n      spinnerOff();\r\n      if (fields.error) {\r\n\r\n      }\r\n    });\r\n}\r\n\r\nfunction removeUserRow(elementRow, path) {\r\n  const submitUserButton = document.querySelector('.js-submitUserFields');\r\n  const elementToRemove = elementRow.nextElementSibling;\r\n\r\n  elementToRemove.remove();\r\n  refreshUserArrows();\r\n\r\n  const rows = document.querySelectorAll('.js-userFieldsDataRow');\r\n\r\n  const metaFields = [];\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const row of rows) {\r\n    const { index } = row.dataset;\r\n    metaFields.push(index);\r\n  }\r\n  const removeJSON = JSON.stringify(metaFields);\r\n  spinnerOn();\r\n  submitUserButton.disabled = true;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'DELETE',\r\n    body: removeJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      submitUserButton.disabled = false;\r\n      submitUserButton.blur();\r\n      spinnerOff();\r\n      if (fields.error) {\r\n\r\n      }\r\n    });\r\n}\r\n\r\nfunction addUserRow(elementRow, path) {\r\n  const table = elementRow.parentElement;\r\n  const oldRow = document.querySelector('.js-userFieldsDataRow[data-index=\"0\"]');\r\n  const newRow = oldRow.cloneNode(true);\r\n\r\n  newRow.dataset.index = Number(elementRow.dataset.index) + 1;\r\n\r\n  const fieldID = newRow.querySelector('.js-userFieldID');\r\n  fieldID.value = '';\r\n  fieldID.name = `user_id[${newRow.dataset.index}]`;\r\n\r\n  const fieldName = newRow.querySelector('.js-userFieldName');\r\n  fieldName.value = '';\r\n  fieldName.name = `field_name[${newRow.dataset.index}]`;\r\n\r\n  // start removing the content of the previous row\r\n  newRow.classList.remove('is-error');\r\n  newRow.querySelector('.js-fieldAction[value=\"read\"]').disabled = false;\r\n  newRow.querySelector('.js-fieldAction[value=\"write\"]').disabled = true;\r\n  newRow.querySelector('.js-fieldAction[value=\"delete\"]').disabled = true;\r\n\r\n  newRow.querySelector('.js-fieldAction[value=\"read\"]').name = `field_action[${newRow.dataset.index}]`;\r\n  newRow.querySelector('.js-fieldAction[value=\"write\"]').name = `field_action[${newRow.dataset.index}]`;\r\n  newRow.querySelector('.js-fieldAction[value=\"delete\"]').name = `field_action[${newRow.dataset.index}]`;\r\n\r\n  // manages the error message\r\n  const fieldErrorMessage = newRow.querySelector('.js-fieldErrorMessage');\r\n  fieldErrorMessage.innerHTML = '';\r\n  fieldErrorMessage.classList.add('is-hidden');\r\n\r\n  // manages the empty array checkbox\r\n  const emptyArrayCheckbox = newRow.querySelector('.js-emptyArray');\r\n  emptyArrayCheckbox.checked = false;\r\n  emptyArrayCheckbox.disabled = true;\r\n  emptyArrayCheckbox.name = `empty_array[${newRow.dataset.index}]`;\r\n\r\n  // manages the date string checkbox\r\n  const dateStringCheckbox = newRow.querySelector('.js-dateString');\r\n  dateStringCheckbox.checked = false;\r\n  dateStringCheckbox.disabled = true;\r\n  dateStringCheckbox.name = `date_string[${newRow.dataset.index}]`;\r\n\r\n  // input value box\r\n  const metaFieldInputValue = newRow.querySelector('.js-metaFieldInputValue');\r\n  metaFieldInputValue.value = '';\r\n  metaFieldInputValue.disabled = true;\r\n  metaFieldInputValue.name = `field_value[${newRow.dataset.index}]`;\r\n\r\n  // Current value\r\n  const fieldCurrentValue = newRow.querySelector('.js-fieldCurrentValue');\r\n  fieldCurrentValue.innerHTML = '';\r\n\r\n  // Current value date-string option\r\n  const currentValueDateToggle = newRow.querySelector('.js-curValueDateToggle');\r\n  currentValueDateToggle.classList.remove('is-visible');\r\n  currentValueDateToggle.classList.add('is-hidden');\r\n\r\n  const currentValueDateToggleCheckbox = newRow.querySelector('.js-fieldDateStringCurValue');\r\n  currentValueDateToggleCheckbox.name = `date_string_show[${newRow.dataset.index}]`;\r\n\r\n  // Previous value\r\n  const fieldPreviousValue = newRow.querySelector('.js-fieldPreviousValue');\r\n  fieldPreviousValue.innerHTML = '';\r\n\r\n  table.appendChild(newRow);\r\n  refreshUserArrows();\r\n\r\n  const submitUserButton = document.querySelector('.js-submitUserFields');\r\n\r\n  const addJSON = JSON.stringify(newRow.dataset.index);\r\n  spinnerOn();\r\n  submitUserButton.disabled = true;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'POST',\r\n    body: addJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      submitUserButton.disabled = false;\r\n      submitUserButton.blur();\r\n      spinnerOff();\r\n      if (fields.error) {\r\n\r\n      }\r\n    });\r\n}\r\n\r\nfunction removePostRow(elementRow, path) {\r\n  const submitPostButton = document.querySelector('.js-submitPostFields');\r\n  const elementToRemove = elementRow.nextElementSibling;\r\n\r\n  elementToRemove.remove();\r\n  refreshPostArrows();\r\n\r\n  const rows = document.querySelectorAll('.js-postFieldsDataRow');\r\n\r\n  const metaFields = [];\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const row of rows) {\r\n    const { index } = row.dataset;\r\n    metaFields.push(index);\r\n  }\r\n  const removeJSON = JSON.stringify(metaFields);\r\n  spinnerOn();\r\n  submitPostButton.disabled = true;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'DELETE',\r\n    body: removeJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      submitPostButton.disabled = false;\r\n      submitPostButton.blur();\r\n      spinnerOff();\r\n      if (fields.error) {\r\n\r\n      }\r\n    });\r\n}\r\n\r\nfunction addPostRow(elementRow, path) {\r\n  const table = elementRow.parentElement;\r\n  const oldRow = document.querySelector('.js-postFieldsDataRow[data-index=\"0\"]');\r\n  const newRow = oldRow.cloneNode(true);\r\n\r\n  newRow.dataset.index = Number(elementRow.dataset.index) + 1;\r\n\r\n  const fieldID = newRow.querySelector('.js-postFieldID');\r\n  fieldID.value = '';\r\n  fieldID.name = `post_id[${newRow.dataset.index}]`;\r\n\r\n  const fieldName = newRow.querySelector('.js-postFieldName');\r\n  fieldName.value = '';\r\n  fieldName.name = `field_name[${newRow.dataset.index}]`;\r\n\r\n  // start removing the content of the previous row\r\n  newRow.classList.remove('is-error');\r\n  newRow.querySelector('.js-fieldAction[value=\"read\"]').disabled = false;\r\n  newRow.querySelector('.js-fieldAction[value=\"write\"]').disabled = true;\r\n  newRow.querySelector('.js-fieldAction[value=\"delete\"]').disabled = true;\r\n\r\n  newRow.querySelector('.js-fieldAction[value=\"read\"]').name = `field_action[${newRow.dataset.index}]`;\r\n  newRow.querySelector('.js-fieldAction[value=\"write\"]').name = `field_action[${newRow.dataset.index}]`;\r\n  newRow.querySelector('.js-fieldAction[value=\"delete\"]').name = `field_action[${newRow.dataset.index}]`;\r\n\r\n  // manages the error message\r\n  const fieldErrorMessage = newRow.querySelector('.js-fieldErrorMessage');\r\n  fieldErrorMessage.innerHTML = '';\r\n  fieldErrorMessage.classList.add('is-hidden');\r\n\r\n  // manages the empty array checkbox\r\n  const emptyArrayCheckbox = newRow.querySelector('.js-emptyArray');\r\n  emptyArrayCheckbox.checked = false;\r\n  emptyArrayCheckbox.disabled = true;\r\n  emptyArrayCheckbox.name = `empty_array[${newRow.dataset.index}]`;\r\n\r\n  // manages the date string checkbox\r\n  const dateStringCheckbox = newRow.querySelector('.js-dateString');\r\n  dateStringCheckbox.checked = false;\r\n  dateStringCheckbox.disabled = true;\r\n  dateStringCheckbox.name = `date_string[${newRow.dataset.index}]`;\r\n\r\n  // input value box\r\n  const metaFieldInputValue = newRow.querySelector('.js-metaFieldInputValue');\r\n  metaFieldInputValue.value = '';\r\n  metaFieldInputValue.disabled = true;\r\n  metaFieldInputValue.name = `field_value[${newRow.dataset.index}]`;\r\n\r\n  // Current value\r\n  const fieldCurrentValue = newRow.querySelector('.js-fieldCurrentValue');\r\n  fieldCurrentValue.innerHTML = '';\r\n\r\n  // Current value date-string option\r\n  const currentValueDateToggle = newRow.querySelector('.js-curValueDateToggle');\r\n  currentValueDateToggle.classList.remove('is-visible');\r\n  currentValueDateToggle.classList.add('is-hidden');\r\n\r\n  const currentValueDateToggleCheckbox = newRow.querySelector('.js-fieldDateStringCurValue');\r\n  currentValueDateToggleCheckbox.name = `date_string_show[${newRow.dataset.index}]`;\r\n\r\n  // Previous value\r\n  const fieldPreviousValue = newRow.querySelector('.js-fieldPreviousValue');\r\n  fieldPreviousValue.innerHTML = '';\r\n\r\n  table.appendChild(newRow);\r\n  refreshPostArrows();\r\n\r\n  const submitPostButton = document.querySelector('.js-submitPostFields');\r\n\r\n  const addJSON = JSON.stringify(newRow.dataset.index);\r\n  spinnerOn();\r\n  submitPostButton.disabled = true;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'POST',\r\n    body: addJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      submitPostButton.disabled = false;\r\n      submitPostButton.blur();\r\n      spinnerOff();\r\n      if (fields.error) {\r\n\r\n      }\r\n    });\r\n}\r\n\r\nfunction checkOptionEvent(e) {\r\n  const element = e.target;\r\n\r\n  const restBase = 'options';\r\n  const updateBase = `${restBase}/update`;\r\n  const path = `${nameSpace}/${updateBase}`;\r\n\r\n  if (!element.classList.contains('js-addRemoveOptionRow')) {\r\n    return;\r\n  }\r\n\r\n  const elementRow = element.parentElement;\r\n\r\n  if (element.innerText === '-') {\r\n    removeOptionRow(elementRow, path);\r\n  } else {\r\n    addOptionRow(elementRow, path);\r\n  }\r\n}\r\n\r\nfunction checkUserEvent(e) {\r\n  const element = e.target;\r\n\r\n  const restBase = 'user_fields';\r\n  const updateBase = `${restBase}/update`;\r\n  const path = `${nameSpace}/${updateBase}`;\r\n\r\n  if (!element.classList.contains('js-addRemoveUserRow')) {\r\n    return;\r\n  }\r\n\r\n  const elementRow = element.parentElement;\r\n\r\n  if (element.innerText === '-') {\r\n    removeUserRow(elementRow, path);\r\n  } else {\r\n    addUserRow(elementRow, path);\r\n  }\r\n}\r\n\r\nfunction checkPostEvent(e) {\r\n  const element = e.target;\r\n\r\n  const restBase = 'post_fields';\r\n  const updateBase = `${restBase}/update`;\r\n  const path = `${nameSpace}/${updateBase}`;\r\n\r\n  if (!element.classList.contains('js-addRemovePostRow')) {\r\n    return;\r\n  }\r\n\r\n  const elementRow = element.parentElement;\r\n\r\n  if (element.innerText === '-') {\r\n    removePostRow(elementRow, path);\r\n  } else {\r\n    addPostRow(elementRow, path);\r\n  }\r\n}\r\n\r\nwindow.addEventListener('load', addArrows, false);\r\n// optionSection.addEventListener('click', checkOptionEvent, false);\r\n// userMetaSection.addEventListener('click', checkUserEvent, false);\r\n// postMetaSection.addEventListener('click', checkPostEvent, false);\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions */\r\nimport { createRef, useEffect } from 'react';\r\n\r\nfunction Arrow(props) {\r\n  const {\r\n    className, title, content, arrowClick: harrowClickProp,\r\n  } = props;\r\n  const arrowRef = createRef();\r\n\r\n  useEffect(() => {\r\n    const optionRow = arrowRef.current.parentElement;\r\n    arrowRef.current.style.top = `${optionRow.offsetTop + optionRow.offsetHeight - 10}px`;\r\n  }, [arrowRef]);\r\n\r\n  function handleArrowClick(e) {\r\n    let index;\r\n\r\n    if (content === '-') {\r\n      index = e.target.parentElement.nextElementSibling.dataset.index;\r\n    } else {\r\n      index = e.target.parentElement.dataset.index;\r\n    }\r\n    harrowClickProp(index, content);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      title={title}\r\n      ref={arrowRef}\r\n      onClick={handleArrowClick}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Arrow;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\nimport React, {\r\n  useEffect, createRef, useState, useCallback,\r\n} from 'react';\r\n\r\nfunction FieldID({\r\n  className, inputValue, fieldIDValue: updateFieldID, inputName, inputType, inputClass, errorClassName, errorMessageClassName, errorMessage, action,\r\n}) {\r\n  const [fieldIDValue, setFieldIDValue] = useState('');\r\n  const actionRef = createRef();\r\n\r\n  const updateFieldIDValue = useCallback((e) => {\r\n    setFieldIDValue(e.target.value);\r\n    updateFieldID(e.target.value);\r\n  }, [updateFieldID]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'write' || action === 'delete') {\r\n      actionRef.current.disabled = true;\r\n    } else {\r\n      actionRef.current.disabled = false;\r\n    }\r\n  }, [action, actionRef]);\r\n\r\n  useEffect(() => {\r\n    setFieldIDValue(inputValue);\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className={errorClassName}>\r\n        <p\r\n          className={errorMessageClassName}\r\n        >\r\n          {errorMessage}\r\n        </p>\r\n      </div>\r\n      <input\r\n        className={inputClass}\r\n        type={inputType}\r\n        step=\"1\"\r\n        min=\"0\"\r\n        name={inputName}\r\n        value={fieldIDValue}\r\n        ref={actionRef}\r\n        onChange={updateFieldIDValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldID;\r\n","import React, {\r\n  useEffect, createRef, useState, useCallback,\r\n} from 'react';\r\n/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n\r\nfunction FieldName({\r\n  className, inputValue, fieldNameValue: updateFieldName, inputName, inputType, inputClass, errorClassName, errorMessageClassName, errorMessage, action,\r\n}) {\r\n  const [fieldNameValue, setFieldNameValue] = useState('');\r\n  const actionRef = createRef();\r\n\r\n  const updateFieldNameValue = useCallback((e) => {\r\n    setFieldNameValue(e.target.value);\r\n    updateFieldName(e.target.value);\r\n  }, [updateFieldName]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'write' || action === 'delete') {\r\n      actionRef.current.disabled = true;\r\n    } else {\r\n      actionRef.current.disabled = false;\r\n    }\r\n  }, [action, actionRef]);\r\n\r\n  useEffect(() => {\r\n    setFieldNameValue(inputValue);\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className={errorClassName}>\r\n        <p\r\n          className={errorMessageClassName}\r\n        >\r\n          {errorMessage}\r\n        </p>\r\n      </div>\r\n      <input\r\n        className={inputClass}\r\n        type={inputType}\r\n        name={inputName}\r\n        value={fieldNameValue}\r\n        ref={actionRef}\r\n        onChange={updateFieldNameValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldName;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction MetaFieldActions({\r\n  className, dataIndex, onChange: onChangeProp, resetPage, restoreEvent, errorMessage, disableWrite, disableDelete,\r\n}) {\r\n  const [action, setAction] = useState('read');\r\n  const [readChecked, setReadChecked] = useState(true);\r\n  const [writeChecked, setWriteChecked] = useState(false);\r\n  const [deleteChecked, setDeleteChecked] = useState(false);\r\n  const readRef = useRef();\r\n  const writeRef = useRef();\r\n  const delRef = useRef();\r\n\r\n  function actionSet(e) {\r\n    setAction(e.target.value);\r\n    onChangeProp(e);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (resetPage) {\r\n      readRef.current.click();\r\n      restoreEvent();\r\n    }\r\n  }, [resetPage, restoreEvent]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'read') {\r\n      setReadChecked(true);\r\n      setWriteChecked(false);\r\n      setDeleteChecked(false);\r\n    }\r\n    if (action === 'write') {\r\n      setReadChecked(false);\r\n      setWriteChecked(true);\r\n      setDeleteChecked(false);\r\n    }\r\n    if (action === 'delete') {\r\n      setReadChecked(false);\r\n      setWriteChecked(false);\r\n      setDeleteChecked(true);\r\n    }\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    if (disableWrite) {\r\n      writeRef.current.disabled = true;\r\n    } else {\r\n      writeRef.current.disabled = false;\r\n    }\r\n    if (disableDelete) {\r\n      delRef.current.disabled = true;\r\n    } else {\r\n      delRef.current.disabled = false;\r\n    }\r\n\r\n    if (errorMessage === 'This field does not exist.') {\r\n      delRef.current.disabled = true;\r\n    }\r\n\r\n    if (errorMessage === 'This user does not exist.' || errorMessage === 'This post does not exist.') {\r\n      writeRef.current.disabled = true;\r\n      delRef.current.disabled = true;\r\n    }\r\n  }, [disableDelete, disableWrite, errorMessage]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <label>\r\n        <input\r\n          className=\"js-fieldAction\"\r\n          type=\"radio\"\r\n          name={`field_action[${dataIndex}]`}\r\n          value=\"read\"\r\n          onChange={actionSet}\r\n          checked={readChecked}\r\n          ref={readRef}\r\n        />\r\n        Read\r\n      </label>\r\n      <label>\r\n        <input\r\n          className=\"js-fieldAction\"\r\n          type=\"radio\"\r\n          name={`field_action[${dataIndex}]`}\r\n          value=\"write\"\r\n          onChange={actionSet}\r\n          checked={writeChecked}\r\n          ref={writeRef}\r\n        />\r\n        Write\r\n      </label>\r\n      <label>\r\n        <input\r\n          className=\"js-fieldAction\"\r\n          type=\"radio\"\r\n          name={`field_action[${dataIndex}]`}\r\n          value=\"delete\"\r\n          onChange={actionSet}\r\n          checked={deleteChecked}\r\n          ref={delRef}\r\n        />\r\n        Delete\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaFieldActions;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope */\r\n// eslint-disable-next-line react/prop-types\r\nconst MetaFieldCurrentValue = ({ className, currentValue }) => (\r\n  <div className={className}>\r\n    {currentValue}\r\n  </div>\r\n);\r\n\r\nexport default MetaFieldCurrentValue;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { isDate } from '../functions.js';\r\n\r\nfunction MetaFieldCurrentValueOptions({\r\n  className, dataIndex, currentValue, onChange,\r\n}) {\r\n  const [curValueDateToggle, setCurValueDateToggle] = useState('is-visible');\r\n\r\n  useEffect(() => {\r\n    if (isDate(currentValue)) {\r\n      setCurValueDateToggle('is-visible');\r\n    } else {\r\n      setCurValueDateToggle('is-hidden');\r\n    }\r\n  }, [currentValue]);\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n    >\r\n      <label\r\n        className={`js-curValueDateToggle c-optionField__fieldCurValueOption ${curValueDateToggle}`}\r\n      >\r\n        <p>Toggle date string/timestamp</p>\r\n        <input\r\n          className=\"js-fieldDateStringCurValue\"\r\n          type=\"checkbox\"\r\n          name={`date_string_show[${dataIndex}]`}\r\n          value=\"\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaFieldCurrentValueOptions;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope */\r\n// eslint-disable-next-line react/prop-types\r\nconst MetaFieldPreviousValue = ({ className, previousValue }) => (\r\n  <div className={className}>\r\n    {previousValue}\r\n  </div>\r\n);\r\n\r\nexport default MetaFieldPreviousValue;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions,jsx-a11y/label-has-associated-control */\r\nimport React, {\r\n  useEffect, createRef, useState, useCallback,\r\n} from 'react';\r\nimport { isInteger, isDate } from '../functions.js';\r\n\r\nfunction MetaFieldValueToAdd(props) {\r\n  const [timeStampBackup, setTimeStampBackup] = useState(0);\r\n  const [inputStringBackup, setInputStringBackup] = useState('');\r\n  const emptyArrayRef = createRef();\r\n  const toggleDateRef = createRef();\r\n  const textAreaRef = createRef();\r\n\r\n  const {\r\n    className, valueOptionsClass, valueOptionsLabelClass, textAreaClass, dataIndex,\r\n    action, emptyArray: emptyArrayChange, valueToAdd: updateValueToAdd, resetPage,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (resetPage) {\r\n      textAreaRef.current.value = '';\r\n      emptyArrayRef.current.checked = false;\r\n      toggleDateRef.current.checked = false;\r\n      emptyArrayChange(false);\r\n      updateValueToAdd('');\r\n    }\r\n  }, [emptyArrayChange, emptyArrayRef, resetPage, textAreaRef, toggleDateRef, updateValueToAdd]);\r\n\r\n  function emptyArrayCheckbox() {\r\n    emptyArrayChange(emptyArrayRef.current.checked);\r\n  }\r\n\r\n  /* Manages the toggle date checkbox */\r\n  function toggleDate() {\r\n    /* Is the current value an integer (that could be interpreted as a timestamp)? */\r\n    if (isInteger(textAreaRef.current.value)) {\r\n      if (textAreaRef.current.value === timeStampBackup) {\r\n        // if the value hasn't changed use the date string saved\r\n        textAreaRef.current.value = inputStringBackup;\r\n      } else {\r\n        // if the value has changed re-generate the date string\r\n        const timestamp = textAreaRef.current.value;\r\n        setTimeStampBackup(timestamp);\r\n        const myDate = new Date(parseInt(timestamp, 10));\r\n        textAreaRef.current.value = myDate.toUTCString();\r\n        setInputStringBackup(textAreaRef.current.value);\r\n      }\r\n    /* If the current value is backed up it means that we also have its timestamp stored. Use that. */\r\n    } else if (textAreaRef.current.value === inputStringBackup) {\r\n      // if the date string hasn't changed use the timestamp saved\r\n      textAreaRef.current.value = timeStampBackup;\r\n    } else {\r\n      // if the date string has changed re-generate the timestamp\r\n      const myDate = new Date(textAreaRef.current.value);\r\n      const dateString = textAreaRef.current.value;\r\n      setInputStringBackup(dateString);\r\n      textAreaRef.current.value = myDate.valueOf();\r\n      setTimeStampBackup(textAreaRef.current.value);\r\n    }\r\n    // Sends upstream the updated value\r\n    updateValueToAdd(textAreaRef.current.value);\r\n  }\r\n\r\n  const textAreaContent = useCallback(() => {\r\n    // Sends upstream the updated value\r\n    updateValueToAdd(textAreaRef.current.value);\r\n    toggleDateRef.current.disabled = !isDate(textAreaRef.current.value);\r\n  }, [textAreaRef, toggleDateRef, updateValueToAdd]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'read' || action === 'delete') {\r\n      emptyArrayRef.current.disabled = true;\r\n      toggleDateRef.current.disabled = true;\r\n      textAreaRef.current.disabled = true;\r\n    } else {\r\n      emptyArrayRef.current.disabled = false;\r\n      textAreaRef.current.disabled = false;\r\n      textAreaContent();\r\n    }\r\n  }, [action, emptyArrayRef, textAreaContent, textAreaRef, toggleDateRef]);\r\n\r\n  // disable the textArea when the user checks the empty array option\r\n  useEffect(() => {\r\n    if (!emptyArrayRef.current.disabled) {\r\n      textAreaRef.current.disabled = emptyArrayRef.current.checked;\r\n    }\r\n  }, [emptyArrayRef, textAreaRef]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className={valueOptionsClass}>\r\n        <label className={valueOptionsLabelClass}>\r\n          <input\r\n            className=\"js-fieldValueToAdd js-emptyArray\"\r\n            type=\"checkbox\"\r\n            name={`empty_array[${dataIndex}]`}\r\n            value=\"empty_array\"\r\n            ref={emptyArrayRef}\r\n            onChange={emptyArrayCheckbox}\r\n          />\r\n          <p\r\n            title=\"Replace the field content with an empty array\"\r\n          >\r\n            Add empty array\r\n          </p>\r\n        </label>\r\n        <label className={valueOptionsLabelClass}>\r\n          <input\r\n            className=\"js-fieldValueToAdd js-dateString\"\r\n            type=\"checkbox\"\r\n            name={`date_string[${dataIndex}]`}\r\n            value=\"date_string\"\r\n            ref={toggleDateRef}\r\n            onChange={toggleDate}\r\n          />\r\n          <p>Toggle date string/timestamp</p>\r\n        </label>\r\n      </div>\r\n      <textarea\r\n        className={textAreaClass}\r\n        name={`field_value[${dataIndex}]`}\r\n        rows=\"2\"\r\n        ref={textAreaRef}\r\n        onChange={textAreaContent}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaFieldValueToAdd;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\n\r\nconst { __ } = wp.i18n;\r\n\r\nconst OptionsMetaHeaders = ({ className }) => (\r\n  <div className={className}>\r\n    <div>\r\n      Option Name\r\n    </div>\r\n    <div>\r\n      {__('Actions', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Value to Add', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Current Value', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Current Value Options', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Previous Value', 'dapre-cft')}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default OptionsMetaHeaders;\r\n","import React, {\r\n  useCallback, useEffect, useState,\r\n} from 'react';\r\n\r\n/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions */\r\nimport Arrow from './Arrow.js';\r\nimport FieldName from './FieldName.js';\r\nimport MetaFieldActions from './MetaFieldActions.js';\r\nimport MetaFieldValueToAdd from './MetaFieldValueToAdd.js';\r\nimport MetaFieldCurrentValue from './MetaFieldCurrentValue.js';\r\nimport MetaFieldCurrentValueOptions from './MetaFieldCurrentValueOptions.js';\r\nimport MetaFieldPreviousValue from './MetaFieldPreviousValue.js';\r\nimport { isInteger } from '../functions';\r\n\r\nfunction OptionsMetaRow(props) {\r\n  const {\r\n    className, rowIndex, dataIndex, fieldName, errorClass, errorMessage, previousValue, disableWrite,\r\n    disableDelete, arrowTitle, arrowContent, currentValue, rowChange: updateForm, resetPage, restoreEvent, arrowClick: arrowClickProp,\r\n  } = props;\r\n\r\n  const [action, setAction] = useState('read');\r\n  const [addEmptyArray, setAddEmptyArray] = useState(false);\r\n  const [valueToWrite, setValueToWrite] = useState('');\r\n  const [fieldNameValue, setFieldNameValue] = useState('');\r\n  const [currentValuePrinted, setCurrentValuePrinted] = useState('');\r\n  const [classColor, setClassColor] = useState('-color-white');\r\n  const [currentValueOptionsTimestampBackup, setCurrentValueOptionsTimestampBackup] = useState(0);\r\n  const [currentValueOptionsDateBackup, setCurrentValueOptionsDateBackup] = useState('');\r\n\r\n  /* Updates the form row to send upstream. */\r\n  useEffect(() => {\r\n    const row = {\r\n      rowIndex,\r\n      optionName: fieldNameValue,\r\n      valueToWrite,\r\n      index: dataIndex,\r\n      emptyArray: addEmptyArray,\r\n      action,\r\n    };\r\n    updateForm(row);\r\n  }, [action, addEmptyArray, dataIndex, fieldNameValue, rowIndex, updateForm, valueToWrite]);\r\n\r\n  /* Updates the field name value when the user changes it */\r\n  const updateFieldNameValue = useCallback((value) => {\r\n    setFieldNameValue(value);\r\n  }, []);\r\n\r\n  /* Initializes the field name value on first load */\r\n  useEffect(() => {\r\n    setFieldNameValue(fieldName);\r\n  }, [fieldName]);\r\n\r\n  /* Updates the field value to write when the user changes it */\r\n  const updateValueToWrite = useCallback((textAreaValue) => {\r\n    setValueToWrite(textAreaValue);\r\n  }, []);\r\n\r\n  const updateEmptyArrayChange = useCallback((checkboxState) => {\r\n    setAddEmptyArray(checkboxState);\r\n  }, []);\r\n\r\n  const updateAction = useCallback((e) => {\r\n    setAction(e.target.value);\r\n  }, []);\r\n\r\n  /* Toggles between date string and timestamp when the current value is a valid date.\r\n  * It's important to notice that this function can be called only when the current value is a valid date,\r\n  * therefore we don't need to check. */\r\n  const toggleDateCurrentValue = useCallback(() => {\r\n    /* Is the current value an integer (that could be interpreted as a timestamp)? */\r\n    if (isInteger(currentValuePrinted)) {\r\n      if (parseInt(currentValuePrinted, 10) === currentValueOptionsTimestampBackup) {\r\n        // if the value hasn't changed use the date string saved\r\n        setCurrentValuePrinted(currentValueOptionsDateBackup);\r\n      } else {\r\n        // if the value has changed re-generate the date string\r\n        const timestamp = parseInt(currentValuePrinted, 10);\r\n        setCurrentValueOptionsTimestampBackup(timestamp);\r\n        const myDate = new Date(timestamp);\r\n        setCurrentValuePrinted(myDate.toUTCString());\r\n        setCurrentValueOptionsDateBackup(myDate.toUTCString());\r\n      }\r\n    /* If the current value is backed up it means that we also have its timestamp stored. Use that. */\r\n    } else if (currentValuePrinted === currentValueOptionsDateBackup) {\r\n      // if the date string hasn't changed use the timestamp saved\r\n      setCurrentValuePrinted(parseInt(currentValueOptionsTimestampBackup, 10));\r\n    } else {\r\n      // if the date string has changed re-generate the timestamp\r\n      const myDate = new Date(currentValuePrinted);\r\n      setCurrentValueOptionsDateBackup(currentValuePrinted);\r\n      setCurrentValuePrinted(myDate.valueOf());\r\n      setCurrentValueOptionsTimestampBackup(myDate.valueOf());\r\n    }\r\n  }, [currentValueOptionsDateBackup, currentValueOptionsTimestampBackup, currentValuePrinted]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'read') {\r\n      setClassColor('-color-white');\r\n    }\r\n    if (action === 'write') {\r\n      setClassColor('-color-blue');\r\n    }\r\n    if (action === 'delete') {\r\n      setClassColor('-color-orange');\r\n    }\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    setCurrentValuePrinted(currentValue);\r\n  }, [currentValue]);\r\n\r\n  function handleArrowClick(index, content) {\r\n    arrowClickProp(index, content);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${className} ${errorClass} ${classColor}`}\r\n      data-index={dataIndex}\r\n    >\r\n      <Arrow\r\n        className=\"js-addRemoveOptionRow c-addRemoveFieldRow c-addRemoveFieldRow__add\"\r\n        title={arrowTitle}\r\n        content={arrowContent}\r\n        arrowClick={handleArrowClick}\r\n      />\r\n      <FieldName\r\n        className=\"c-optionField__fieldName\"\r\n        errorClassName=\"c-optionField__fieldErrorContainer\"\r\n        errorMessageClassName=\"js-fieldErrorMessage c-optionField__fieldErrorMessage\"\r\n        inputClass=\"js-optionFieldName c-optionField__fieldInput\"\r\n        inputType=\"text\"\r\n        inputName=\"field_name\"\r\n        inputValue={fieldNameValue}\r\n        fieldNameValue={updateFieldNameValue}\r\n        errorMessage={errorMessage}\r\n        action={action}\r\n      />\r\n      <MetaFieldActions\r\n        className=\"c-optionField__fieldActions\"\r\n        dataIndex={dataIndex}\r\n        onChange={updateAction}\r\n        resetPage={resetPage}\r\n        restoreEvent={restoreEvent}\r\n        errorMessage={errorMessage}\r\n        disableWrite={disableWrite}\r\n        disableDelete={disableDelete}\r\n      />\r\n      <MetaFieldValueToAdd\r\n        className=\"c-optionField__fieldValueToAdd\"\r\n        valueOptionsClass=\"c-optionField__fieldValueOptions\"\r\n        valueOptionsLabelClass=\"c-optionField__fieldValueOptionLabel\"\r\n        textAreaClass=\"js-metaFieldInputValue c-optionField__fieldValueToAddTextarea\"\r\n        disableWrite={disableWrite}\r\n        disableDelete={disableDelete}\r\n        dataIndex={dataIndex}\r\n        action={action}\r\n        emptyArray={updateEmptyArrayChange}\r\n        valueToAdd={updateValueToWrite}\r\n        resetPage={resetPage}\r\n      />\r\n      <MetaFieldCurrentValue\r\n        className=\"js-fieldCurrentValue c-optionField__fieldCurValue\"\r\n        currentValue={currentValuePrinted}\r\n      />\r\n      <MetaFieldCurrentValueOptions\r\n        className=\"c-optionField__fieldCurValueOptions\"\r\n        currentValue={currentValue}\r\n        dataIndex={dataIndex}\r\n        onChange={toggleDateCurrentValue}\r\n      />\r\n      <MetaFieldPreviousValue\r\n        className=\"js-fieldPreviousValue c-optionField__fieldPrevValue\"\r\n        previousValue={previousValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionsMetaRow;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\n\r\nconst { __ } = wp.i18n;\r\n\r\nconst PostsMetaHeaders = ({ className }) => (\r\n  <div className={className}>\r\n    <div>\r\n      Post ID\r\n    </div>\r\n    <div>\r\n      Field Name\r\n    </div>\r\n    <div>\r\n      {__('Actions', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Value to Add', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Current Value', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Current Value Options', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Previous Value', 'dapre-cft')}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PostsMetaHeaders;\r\n","import React, {\r\n  useCallback, useEffect, useState,\r\n} from 'react';\r\n\r\n/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions */\r\nimport Arrow from './Arrow.js';\r\nimport FieldID from './FieldID.js';\r\nimport FieldName from './FieldName.js';\r\nimport MetaFieldActions from './MetaFieldActions.js';\r\nimport MetaFieldValueToAdd from './MetaFieldValueToAdd.js';\r\nimport MetaFieldCurrentValue from './MetaFieldCurrentValue.js';\r\nimport MetaFieldCurrentValueOptions from './MetaFieldCurrentValueOptions.js';\r\nimport MetaFieldPreviousValue from './MetaFieldPreviousValue.js';\r\nimport { isInteger } from '../functions';\r\n\r\nfunction PostsMetaRow(props) {\r\n  const {\r\n    className, rowIndex, dataIndex, fieldID, fieldName, errorClass, errorMessage, previousValue, disableWrite,\r\n    disableDelete, arrowTitle, arrowContent, currentValue, rowChange: updateForm, resetPage, restoreEvent, arrowClick: arrowClickProp,\r\n  } = props;\r\n\r\n  const [action, setAction] = useState('read');\r\n  const [addEmptyArray, setAddEmptyArray] = useState(false);\r\n  const [valueToWrite, setValueToWrite] = useState('');\r\n  const [fieldIDValue, setFieldIDValue] = useState('');\r\n  const [fieldNameValue, setFieldNameValue] = useState('');\r\n  const [currentValuePrinted, setCurrentValuePrinted] = useState('');\r\n  const [classColor, setClassColor] = useState('-color-white');\r\n  const [currentValuePostsTimestampBackup, setCurrentValuePostsTimestampBackup] = useState(0);\r\n  const [currentValuePostsDateBackup, setCurrentValuePostsDateBackup] = useState('');\r\n\r\n  /* Updates the form row to send upstream. */\r\n  useEffect(() => {\r\n    const row = {\r\n      rowIndex,\r\n      fieldID: fieldIDValue,\r\n      fieldName: fieldNameValue,\r\n      valueToWrite,\r\n      index: dataIndex,\r\n      emptyArray: addEmptyArray,\r\n      action,\r\n    };\r\n    updateForm(row);\r\n  }, [action, addEmptyArray, dataIndex, fieldIDValue, fieldNameValue, rowIndex, updateForm, valueToWrite]);\r\n\r\n  /* Updates the field name value when the user changes it */\r\n  const updateFieldNameValue = useCallback((value) => {\r\n    setFieldNameValue(value);\r\n  }, []);\r\n\r\n  const updateFieldIDValue = useCallback((value) => {\r\n    setFieldIDValue(value);\r\n  }, []);\r\n\r\n  /* Initializes the field name value on first load */\r\n  useEffect(() => {\r\n    setFieldNameValue(fieldName);\r\n  }, [fieldName]);\r\n\r\n  /* Initializes the field ID on first load */\r\n  useEffect(() => {\r\n    setFieldIDValue(fieldID);\r\n  }, [fieldID]);\r\n\r\n  /* Updates the field value to write when the user changes it */\r\n  const updateValueToWrite = useCallback((textAreaValue) => {\r\n    setValueToWrite(textAreaValue);\r\n  }, []);\r\n\r\n  const updateEmptyArrayChange = useCallback((checkboxState) => {\r\n    setAddEmptyArray(checkboxState);\r\n  }, []);\r\n\r\n  const updateAction = useCallback((e) => {\r\n    setAction(e.target.value);\r\n  }, []);\r\n\r\n  /* Toggles between date string and timestamp when the current value is a valid date.\r\n  * It's important to notice that this function can be called only when the current value is a valid date,\r\n  * therefore we don't need to check. */\r\n  const toggleDateCurrentValue = useCallback(() => {\r\n    /* Is the current value an integer (that could be interpreted as a timestamp)? */\r\n    if (isInteger(currentValuePrinted)) {\r\n      if (parseInt(currentValuePrinted, 10) === currentValuePostsTimestampBackup) {\r\n        // if the value hasn't changed use the date string saved\r\n        setCurrentValuePrinted(currentValuePostsDateBackup);\r\n      } else {\r\n        // if the value has changed re-generate the date string\r\n        const timestamp = parseInt(currentValuePrinted, 10);\r\n        setCurrentValuePostsTimestampBackup(timestamp);\r\n        const myDate = new Date(timestamp);\r\n        setCurrentValuePrinted(myDate.toUTCString());\r\n        setCurrentValuePostsDateBackup(myDate.toUTCString());\r\n      }\r\n    /* If the current value is backed up it means that we also have its timestamp stored. Use that. */\r\n    } else if (currentValuePrinted === currentValuePostsDateBackup) {\r\n      // if the date string hasn't changed use the timestamp saved\r\n      setCurrentValuePrinted(parseInt(currentValuePostsTimestampBackup, 10));\r\n    } else {\r\n      // if the date string has changed re-generate the timestamp\r\n      const myDate = new Date(currentValuePrinted);\r\n      setCurrentValuePostsDateBackup(currentValuePrinted);\r\n      setCurrentValuePrinted(myDate.valueOf());\r\n      setCurrentValuePostsTimestampBackup(myDate.valueOf());\r\n    }\r\n  }, [currentValuePostsDateBackup, currentValuePostsTimestampBackup, currentValuePrinted]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'read') {\r\n      setClassColor('-color-white');\r\n    }\r\n    if (action === 'write') {\r\n      setClassColor('-color-blue');\r\n    }\r\n    if (action === 'delete') {\r\n      setClassColor('-color-orange');\r\n    }\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    setCurrentValuePrinted(currentValue);\r\n  }, [currentValue]);\r\n\r\n  function handleArrowClick(index, content) {\r\n    arrowClickProp(index, content);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${className} ${errorClass} ${classColor}`}\r\n      data-index={dataIndex}\r\n    >\r\n      <Arrow\r\n        className=\"js-addRemovePostRow c-addRemoveFieldRow c-addRemoveFieldRow__add\"\r\n        title={arrowTitle}\r\n        content={arrowContent}\r\n        arrowClick={handleArrowClick}\r\n      />\r\n      <FieldID\r\n        className=\"c-metaField__fieldName\"\r\n        errorClassName=\"c-metaField__fieldErrorContainer\"\r\n        errorMessageClassName=\"js-fieldErrorMessage c-metaField__fieldErrorMessage\"\r\n        inputClass=\"js-postFieldName c-metaField__fieldInput\"\r\n        inputType=\"number\"\r\n        inputName=\"post_id\"\r\n        inputValue={fieldIDValue}\r\n        fieldIDValue={updateFieldIDValue}\r\n        action={action}\r\n      />\r\n      <FieldName\r\n        className=\"c-metaField__fieldName\"\r\n        errorClassName=\"c-metaField__fieldErrorContainer\"\r\n        errorMessageClassName=\"js-postErrorMessage c-metaField__fieldErrorMessage\"\r\n        inputClass=\"js-metaFieldName c-metaField__fieldInput\"\r\n        inputType=\"text\"\r\n        inputName=\"field_name\"\r\n        inputValue={fieldNameValue}\r\n        fieldNameValue={updateFieldNameValue}\r\n        errorMessage={errorMessage}\r\n        action={action}\r\n      />\r\n      <MetaFieldActions\r\n        className=\"c-metaField__fieldActions\"\r\n        dataIndex={dataIndex}\r\n        onChange={updateAction}\r\n        resetPage={resetPage}\r\n        restoreEvent={restoreEvent}\r\n        errorMessage={errorMessage}\r\n        disableWrite={disableWrite}\r\n        disableDelete={disableDelete}\r\n      />\r\n      <MetaFieldValueToAdd\r\n        className=\"c-metaField__fieldValueToAdd\"\r\n        valueOptionsClass=\"c-metaField__fieldValueOptions\"\r\n        valueOptionsLabelClass=\"c-metaField__fieldValueOptionLabel\"\r\n        textAreaClass=\"js-metaFieldInputValue c-metaField__fieldValueToAddTextarea\"\r\n        disableWrite={disableWrite}\r\n        disableDelete={disableDelete}\r\n        dataIndex={dataIndex}\r\n        action={action}\r\n        emptyArray={updateEmptyArrayChange}\r\n        valueToAdd={updateValueToWrite}\r\n        resetPage={resetPage}\r\n      />\r\n      <MetaFieldCurrentValue\r\n        className=\"js-fieldCurrentValue c-metaField__fieldCurValue\"\r\n        currentValue={currentValuePrinted}\r\n      />\r\n      <MetaFieldCurrentValueOptions\r\n        className=\"c-metaField__fieldCurValueOptions\"\r\n        currentValue={currentValue}\r\n        dataIndex={dataIndex}\r\n        onChange={toggleDateCurrentValue}\r\n      />\r\n      <MetaFieldPreviousValue\r\n        className=\"js-fieldPreviousValue c-metaField__fieldPrevValue\"\r\n        previousValue={previousValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostsMetaRow;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\n\r\nconst { __ } = wp.i18n;\r\n\r\nconst UsersMetaHeaders = ({ className }) => (\r\n  <div className={className}>\r\n    <div>\r\n      User ID\r\n    </div>\r\n    <div>\r\n      Field Name\r\n    </div>\r\n    <div>\r\n      {__('Actions', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Value to Add', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Current Value', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Current Value Options', 'dapre-cft')}\r\n    </div>\r\n    <div>\r\n      {__('Previous Value', 'dapre-cft')}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default UsersMetaHeaders;\r\n","import React, {\r\n  useCallback, useEffect, useState,\r\n} from 'react';\r\n\r\n/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions */\r\nimport Arrow from './Arrow.js';\r\nimport FieldID from './FieldID.js';\r\nimport FieldName from './FieldName.js';\r\nimport MetaFieldActions from './MetaFieldActions.js';\r\nimport MetaFieldValueToAdd from './MetaFieldValueToAdd.js';\r\nimport MetaFieldCurrentValue from './MetaFieldCurrentValue.js';\r\nimport MetaFieldCurrentValueOptions from './MetaFieldCurrentValueOptions.js';\r\nimport MetaFieldPreviousValue from './MetaFieldPreviousValue.js';\r\nimport { isInteger } from '../functions';\r\n\r\nfunction UsersMetaRow(props) {\r\n  const {\r\n    className, rowIndex, dataIndex, fieldID, fieldName, errorClass, errorMessage, previousValue, disableWrite,\r\n    disableDelete, arrowTitle, arrowContent, currentValue, rowChange: updateForm, resetPage, restoreEvent, arrowClick: arrowClickProp,\r\n  } = props;\r\n\r\n  const [action, setAction] = useState('read');\r\n  const [addEmptyArray, setAddEmptyArray] = useState(false);\r\n  const [valueToWrite, setValueToWrite] = useState('');\r\n  const [fieldIDValue, setFieldIDValue] = useState('');\r\n  const [fieldNameValue, setFieldNameValue] = useState('');\r\n  const [currentValuePrinted, setCurrentValuePrinted] = useState('');\r\n  const [classColor, setClassColor] = useState('-color-white');\r\n  const [currentValueUsersTimestampBackup, setCurrentValueUsersTimestampBackup] = useState(0);\r\n  const [currentValueUsersDateBackup, setCurrentValueUsersDateBackup] = useState('');\r\n\r\n  /* Updates the form row to send upstream. */\r\n  useEffect(() => {\r\n    const row = {\r\n      rowIndex,\r\n      fieldID: fieldIDValue,\r\n      fieldName: fieldNameValue,\r\n      valueToWrite,\r\n      index: dataIndex,\r\n      emptyArray: addEmptyArray,\r\n      action,\r\n    };\r\n    updateForm(row);\r\n  }, [action, addEmptyArray, dataIndex, fieldIDValue, fieldNameValue, rowIndex, updateForm, valueToWrite]);\r\n\r\n  /* Updates the field name value when the user changes it */\r\n  const updateFieldNameValue = useCallback((value) => {\r\n    setFieldNameValue(value);\r\n  }, []);\r\n\r\n  const updateFieldIDValue = useCallback((value) => {\r\n    setFieldIDValue(value);\r\n  }, []);\r\n\r\n  /* Initializes the field name value on first load */\r\n  useEffect(() => {\r\n    setFieldNameValue(fieldName);\r\n  }, [fieldName]);\r\n\r\n  /* Initializes the field ID on first load */\r\n  useEffect(() => {\r\n    setFieldIDValue(fieldID);\r\n  }, [fieldID]);\r\n\r\n  /* Updates the field value to write when the user changes it */\r\n  const updateValueToWrite = useCallback((textAreaValue) => {\r\n    setValueToWrite(textAreaValue);\r\n  }, []);\r\n\r\n  const updateEmptyArrayChange = useCallback((checkboxState) => {\r\n    setAddEmptyArray(checkboxState);\r\n  }, []);\r\n\r\n  const updateAction = useCallback((e) => {\r\n    setAction(e.target.value);\r\n  }, []);\r\n\r\n  /* Toggles between date string and timestamp when the current value is a valid date.\r\n  * It's important to notice that this function can be called only when the current value is a valid date,\r\n  * therefore we don't need to check. */\r\n  const toggleDateCurrentValue = useCallback(() => {\r\n    /* Is the current value an integer (that could be interpreted as a timestamp)? */\r\n    if (isInteger(currentValuePrinted)) {\r\n      if (parseInt(currentValuePrinted, 10) === currentValueUsersTimestampBackup) {\r\n        // if the value hasn't changed use the date string saved\r\n        setCurrentValuePrinted(currentValueUsersDateBackup);\r\n      } else {\r\n        // if the value has changed re-generate the date string\r\n        const timestamp = parseInt(currentValuePrinted, 10);\r\n        setCurrentValueUsersTimestampBackup(timestamp);\r\n        const myDate = new Date(timestamp);\r\n        setCurrentValuePrinted(myDate.toUTCString());\r\n        setCurrentValueUsersDateBackup(myDate.toUTCString());\r\n      }\r\n    /* If the current value is backed up it means that we also have its timestamp stored. Use that. */\r\n    } else if (currentValuePrinted === currentValueUsersDateBackup) {\r\n      // if the date string hasn't changed use the timestamp saved\r\n      setCurrentValuePrinted(parseInt(currentValueUsersTimestampBackup, 10));\r\n    } else {\r\n      // if the date string has changed re-generate the timestamp\r\n      const myDate = new Date(currentValuePrinted);\r\n      setCurrentValueUsersDateBackup(currentValuePrinted);\r\n      setCurrentValuePrinted(myDate.valueOf());\r\n      setCurrentValueUsersTimestampBackup(myDate.valueOf());\r\n    }\r\n  }, [currentValueUsersDateBackup, currentValueUsersTimestampBackup, currentValuePrinted]);\r\n\r\n  useEffect(() => {\r\n    if (action === 'read') {\r\n      setClassColor('-color-white');\r\n    }\r\n    if (action === 'write') {\r\n      setClassColor('-color-blue');\r\n    }\r\n    if (action === 'delete') {\r\n      setClassColor('-color-orange');\r\n    }\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    setCurrentValuePrinted(currentValue);\r\n  }, [currentValue]);\r\n\r\n  function handleArrowClick(index, content) {\r\n    arrowClickProp(index, content);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${className} ${errorClass} ${classColor}`}\r\n      data-index={dataIndex}\r\n    >\r\n      <Arrow\r\n        className=\"js-addRemoveUserRow c-addRemoveFieldRow c-addRemoveFieldRow__add\"\r\n        title={arrowTitle}\r\n        content={arrowContent}\r\n        arrowClick={handleArrowClick}\r\n      />\r\n      <FieldID\r\n        className=\"c-metaField__fieldName\"\r\n        errorClassName=\"c-metaField__fieldErrorContainer\"\r\n        errorMessageClassName=\"js-fieldErrorMessage c-metaField__fieldErrorMessage\"\r\n        inputClass=\"js-userFieldName c-metaField__fieldInput\"\r\n        inputType=\"number\"\r\n        inputName=\"user_id\"\r\n        inputValue={fieldIDValue}\r\n        fieldIDValue={updateFieldIDValue}\r\n        action={action}\r\n      />\r\n      <FieldName\r\n        className=\"c-metaField__fieldName\"\r\n        errorClassName=\"c-metaField__fieldErrorContainer\"\r\n        errorMessageClassName=\"js-userErrorMessage c-metaField__fieldErrorMessage\"\r\n        inputClass=\"js-metaFieldName c-metaField__fieldInput\"\r\n        inputType=\"text\"\r\n        inputName=\"field_name\"\r\n        inputValue={fieldNameValue}\r\n        fieldNameValue={updateFieldNameValue}\r\n        errorMessage={errorMessage}\r\n        action={action}\r\n      />\r\n      <MetaFieldActions\r\n        className=\"c-metaField__fieldActions\"\r\n        dataIndex={dataIndex}\r\n        onChange={updateAction}\r\n        resetPage={resetPage}\r\n        restoreEvent={restoreEvent}\r\n        errorMessage={errorMessage}\r\n        disableWrite={disableWrite}\r\n        disableDelete={disableDelete}\r\n      />\r\n      <MetaFieldValueToAdd\r\n        className=\"c-metaField__fieldValueToAdd\"\r\n        valueOptionsClass=\"c-metaField__fieldValueOptions\"\r\n        valueOptionsLabelClass=\"c-metaField__fieldValueOptionLabel\"\r\n        textAreaClass=\"js-metaFieldInputValue c-metaField__fieldValueToAddTextarea\"\r\n        disableWrite={disableWrite}\r\n        disableDelete={disableDelete}\r\n        dataIndex={dataIndex}\r\n        action={action}\r\n        emptyArray={updateEmptyArrayChange}\r\n        valueToAdd={updateValueToWrite}\r\n        resetPage={resetPage}\r\n      />\r\n      <MetaFieldCurrentValue\r\n        className=\"js-fieldCurrentValue c-metaField__fieldCurValue\"\r\n        currentValue={currentValuePrinted}\r\n      />\r\n      <MetaFieldCurrentValueOptions\r\n        className=\"c-metaField__fieldCurValueOptions\"\r\n        currentValue={currentValue}\r\n        dataIndex={dataIndex}\r\n        onChange={toggleDateCurrentValue}\r\n      />\r\n      <MetaFieldPreviousValue\r\n        className=\"js-fieldPreviousValue c-metaField__fieldPrevValue\"\r\n        previousValue={previousValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersMetaRow;\r\n","/* eslint-disable import/extensions */\r\nimport './tab-navigation.js';\r\nimport './meta-box-ui.js';\r\nimport './copy-meta-ui.js';\r\nimport './option-meta-actions.js';\r\nimport './user-meta-actions.js';\r\nimport './post-meta-actions.js';\r\nimport './add-remove-meta-row.js';\r\nimport './tabs-render.js';\r\n","/* eslint-disable func-names */\r\n// const { apiFetch } = wp;\r\n\r\nconst copyOptionSection = document.querySelector('.js-copyOptionTo');\r\nconst copyUserMetaSection = document.querySelector('.js-copyUserFieldTo');\r\nconst copyPostMetaSection = document.querySelector('.js-copyPostFieldTo');\r\n\r\n/* Get elements in the option tab */\r\nconst optionToUserField = document.querySelector('.js-optionToUserField');\r\nconst optionToOption = document.querySelector('.js-optionToOption');\r\nconst optionToPostField = document.querySelector('.js-optionToPostField');\r\n\r\n/* Get elements in the user fields tab */\r\nconst userFieldToUserField = document.querySelector('.js-userFieldToUserField');\r\nconst userFieldToOption = document.querySelector('.js-userFieldToOption');\r\nconst userFieldToPostField = document.querySelector('.js-userFieldToPostField');\r\n\r\n/* Get elements in the post fields tab */\r\nconst postFieldToUserField = document.querySelector('.js-postFieldToUserField');\r\nconst postFieldToOption = document.querySelector('.js-postFieldToOption');\r\nconst postFieldToPostField = document.querySelector('.js-postFieldToPostField');\r\n\r\n/**\r\n * Slide up a box\r\n * @param element Element or box to slide up\r\n */\r\nfunction slideUp(element) {\r\n  element.classList.remove('is-open');\r\n}\r\n\r\n/**\r\n * Slide down a box\r\n * @param element Element or box to slide down\r\n */\r\nfunction slideDown(element) {\r\n  element.classList.add('is-open');\r\n}\r\n\r\n/* Select where to copy the option field */\r\nconst copyOptionDestinations = function (e) {\r\n  const element = e.target;\r\n\r\n  if (element.value === 'option') {\r\n    slideUp(optionToUserField);\r\n    slideUp(optionToPostField);\r\n    slideDown(optionToOption);\r\n  }\r\n\r\n  if (element.value === 'user field') {\r\n    slideUp(optionToOption);\r\n    slideUp(optionToPostField);\r\n    slideDown(optionToUserField);\r\n  }\r\n\r\n  if (element.value === 'post field') {\r\n    slideUp(optionToUserField);\r\n    slideUp(optionToOption);\r\n    slideDown(optionToPostField);\r\n  }\r\n};\r\n\r\n/* Select where to copy the user field */\r\nconst copyUserFieldDestination = function (e) {\r\n  const element = e.target;\r\n\r\n  if (element.value === 'option') {\r\n    slideUp(userFieldToUserField);\r\n    slideUp(userFieldToPostField);\r\n    slideDown(userFieldToOption);\r\n  }\r\n\r\n  if (element.value === 'user field') {\r\n    slideUp(userFieldToOption);\r\n    slideUp(userFieldToPostField);\r\n    slideDown(userFieldToUserField);\r\n  }\r\n\r\n  if (element.value === 'post field') {\r\n    slideUp(userFieldToOption);\r\n    slideUp(userFieldToUserField);\r\n    slideDown(userFieldToPostField);\r\n  }\r\n};\r\n\r\n/**\r\n * Select where to copy the post field\r\n * @param e Top element that got the click\r\n */\r\nconst copyPostFieldDestination = function (e) {\r\n  const element = e.target;\r\n\r\n  if (element.value === 'option') {\r\n    slideUp(postFieldToUserField);\r\n    slideUp(postFieldToPostField);\r\n    slideDown(postFieldToOption);\r\n  }\r\n\r\n  if (element.value === 'user field') {\r\n    slideUp(postFieldToOption);\r\n    slideUp(postFieldToPostField);\r\n    slideDown(postFieldToUserField);\r\n  }\r\n\r\n  if (element.value === 'post field') {\r\n    slideUp(postFieldToOption);\r\n    slideUp(postFieldToUserField);\r\n    slideDown(postFieldToPostField);\r\n  }\r\n};\r\n\r\ncopyOptionSection.addEventListener('click', copyOptionDestinations, false);\r\ncopyUserMetaSection.addEventListener('click', copyUserFieldDestination, false);\r\ncopyPostMetaSection.addEventListener('click', copyPostFieldDestination, false);\r\n","export const nameSpace = 'dapre-cft/v1';\r\n\r\n/* eslint-disable no-param-reassign */\r\nexport const isNumber = function (o) {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return !isNaN(o - 0) && o !== null && o !== '' && o !== false;\r\n};\r\n\r\n/*\r\n * Checks if the content of a field is an integer >0\r\n * Useful to check if the content of an ID field is valid */\r\n// eslint-disable-next-line no-unused-vars\r\nexport const isNormalInteger = function (str) {\r\n  return /^([1-9]\\d*)$/.test(str);\r\n};\r\n\r\nexport const isPositiveInteger = function (str) {\r\n  return /^([1-9]\\d*)$/.test(str);\r\n};\r\n\r\n/*\r\n * Checks if the content of a field is an integer positive or negative\r\n * Useful to check timestamps */\r\nexport const isInteger = function (value) {\r\n  return /^-?\\d+$/.test(value);\r\n};\r\n\r\n/* Returns true if value is either a valid timestamp or a valid string date */\r\nexport const isDate = function (value) {\r\n  if (isInteger(value)) {\r\n    return true;\r\n  }\r\n\r\n  const date = new Date(value);\r\n\r\n  if (isNaN(date.valueOf())) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const spinnerOn = function () {\r\n  const spinner = document.querySelector('.js-halfCircleSpinner');\r\n  spinner.classList.remove('is-hidden');\r\n};\r\n\r\nexport const spinnerOff = function () {\r\n  const spinner = document.querySelector('.js-halfCircleSpinner');\r\n  spinner.classList.add('is-hidden');\r\n};\r\n","// eslint-disable-next-line import/extensions\r\nimport { isNumber } from './functions.js';\r\n\r\nconst optionSection = document.querySelector('.js-optionsMetaSection');\r\nconst userMetaSection = document.querySelector('.js-userFieldsSection');\r\nconst postMetaSection = document.querySelector('.js-postFieldsSection');\r\n\r\n// Change the color of the row field according to the option chosen\r\nconst changeFieldColor = function (element) {\r\n  const row = element.parentNode.parentNode.parentNode;\r\n  const content = row.querySelector('.js-metaFieldInputValue');\r\n  const toggleDateCheckbox = row.querySelector('.js-emptyArray');\r\n  const arrayCheckbox = row.querySelector('.js-dateString');\r\n\r\n  if (element.value === 'read') {\r\n    row.classList.add('-color-white');\r\n    row.classList.remove('-color-blue');\r\n    row.classList.remove('-color-orange');\r\n    content.disabled = true;\r\n    toggleDateCheckbox.disabled = true;\r\n    arrayCheckbox.disabled = true;\r\n    element.checked = true;\r\n  }\r\n\r\n  if (element.value === 'write') {\r\n    row.classList.add('-color-blue');\r\n    row.classList.remove('-color-white');\r\n    row.classList.remove('-color-orange');\r\n    content.disabled = false;\r\n    toggleDateCheckbox.disabled = false;\r\n    arrayCheckbox.disabled = false;\r\n    element.checked = true;\r\n  }\r\n\r\n  if (element.value === 'delete') {\r\n    row.classList.add('-color-orange');\r\n    row.classList.remove('-color-blue');\r\n    row.classList.remove('-color-white');\r\n    content.disabled = true;\r\n    toggleDateCheckbox.disabled = true;\r\n    arrayCheckbox.disabled = true;\r\n    element.checked = true;\r\n  }\r\n};\r\n\r\nconst newValueOptions = function (element) {\r\n  const inputBox = element.parentNode.parentNode.parentNode;\r\n  const toggleDateCheckbox = inputBox.querySelector('.js-dateString');\r\n  const arrayCheckbox = inputBox.querySelector('.js-emptyArray');\r\n  const content = inputBox.querySelector('.js-metaFieldInputValue');\r\n\r\n  if (element.value === 'empty_array') {\r\n    // if the user checked the empty array checkbox then disable the toggle date and return\r\n    if (element.checked === true) {\r\n      toggleDateCheckbox.checked = false;\r\n      content.disabled = true;\r\n    } else if (element.checked === false) {\r\n      content.disabled = false;\r\n    }\r\n  }\r\n\r\n  if (element.value === 'date_string') {\r\n    content.disabled = false;\r\n    arrayCheckbox.checked = false;\r\n    // get the elements used to backup the values\r\n    const dateTimestampBackup = document.querySelector('.js-metaFieldInputTimestampBackup');\r\n    const dateStringBackup = document.querySelector('.js-metaFieldInputStringBackup');\r\n\r\n    // if it is a number interpret as a timestamp\r\n    if (isNumber(content.value)) {\r\n      if (content.value === dateTimestampBackup.value) {\r\n        // if the value hasn't changed use the date string saved\r\n        content.value = dateStringBackup.value;\r\n      } else {\r\n        // if the value has changed re-generate the date string\r\n        const timestamp = content.value;\r\n        dateTimestampBackup.value = timestamp;\r\n        const dateInt = parseInt(timestamp, 10);\r\n        const myDate = new Date(dateInt);\r\n        content.value = myDate.toUTCString();\r\n        dateStringBackup.value = content.value;\r\n      }\r\n    } else if (content.value !== null) {\r\n      if (content.value === dateStringBackup.value) {\r\n        // if the date string hasn't changed use the timestamp saved\r\n        content.value = dateTimestampBackup.value;\r\n      } else {\r\n        // if the date string has changed re-generate the timestamp\r\n        const myDate = new Date(content.value);\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (isNaN(myDate.valueOf())) {\r\n          alert('Please use a valid string date');\r\n          toggleDateCheckbox.checked = false;\r\n        } else {\r\n          const dateString = content.value;\r\n          dateStringBackup.value = dateString;\r\n          content.value = myDate.valueOf();\r\n          dateTimestampBackup.value = content.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/* Toggle between date string and timestamp representation of the current field content */\r\nconst curValueDateString = function (element) {\r\n  const row = element.parentNode.parentNode.parentNode;\r\n  const fieldContent = row.querySelector('.js-fieldCurrentValue');\r\n  const toggleDateCheckbox = row.querySelector('.js-fieldDateStringCurValue');\r\n\r\n  // get the elements used to backup the values\r\n  const dateTimestampBackup = row.querySelector('.js-fieldValueTimestampBackup');\r\n  const dateStringBackup = row.querySelector('.js-fieldValueStringBackup');\r\n\r\n  // if it is a number interpret as a timestamp\r\n  if (isNumber(fieldContent.innerText)) {\r\n    if (dateStringBackup.value) {\r\n      // if there is a backup use it\r\n      fieldContent.innerText = dateStringBackup.value;\r\n    } else {\r\n      const timestamp = fieldContent.innerText;\r\n\r\n      // save the timestamp. Since the string is an approximation and loses the milliseconds\r\n      // the backup guarantees that we get back the original timestamp\r\n      dateTimestampBackup.value = timestamp;\r\n      const dateInt = parseInt(fieldContent.innerText, 10);\r\n      const myDate = new Date(dateInt);\r\n      fieldContent.innerText = myDate.toUTCString();\r\n      dateStringBackup.value = fieldContent.innerText;\r\n    }\r\n  } else if (dateTimestampBackup.value) {\r\n    fieldContent.innerText = dateTimestampBackup.value;\r\n  } else {\r\n    const myDate = new Date(fieldContent.innerText);\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (isNaN(myDate.valueOf())) {\r\n      alert('Please use a valid string date');\r\n      toggleDateCheckbox.checked = false;\r\n    } else {\r\n      const dateString = fieldContent.innerText;\r\n      dateStringBackup.value = dateString;\r\n      fieldContent.innerText = myDate.valueOf();\r\n      dateTimestampBackup.value = fieldContent.innerText;\r\n    }\r\n  }\r\n};\r\n\r\nconst checkEvent = function (e) {\r\n  e.preventDefault();\r\n\r\n  const element = e.target;\r\n\r\n  /* Manage the action option */\r\n  if (element.classList.contains('js-fieldAction')) {\r\n    changeFieldColor(element);\r\n  }\r\n\r\n  /* Manage the checkboxes with the value options */\r\n  if (element.classList.contains('js-fieldValueToAdd')) {\r\n    newValueOptions(element);\r\n  }\r\n\r\n  /* Manage the current value checkbox */\r\n  if (element.classList.contains('js-fieldDateStringCurValue')) {\r\n    curValueDateString(element);\r\n  }\r\n};\r\n\r\n// optionSection.addEventListener('change', checkEvent, false);\r\n// userMetaSection.addEventListener('change', checkEvent, false);\r\n// postMetaSection.addEventListener('change', checkEvent, false);\r\n","/* eslint-disable function-paren-newline */\r\n// eslint-disable-next-line import/extensions\r\nimport { spinnerOn, spinnerOff, nameSpace } from './functions.js';\r\n// eslint-disable-next-line import/extensions\r\nimport { refreshOptionArrows } from './add-remove-meta-row.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst submitOptionsButton = document.querySelector('.js-submitOptions');\r\nconst renameOptionsButton = document.querySelector('.js-submitRenameOption');\r\nconst copyOptionsButton = document.querySelector('.js-submitCopyOption');\r\nlet read = [];\r\nlet write = [];\r\nlet del = [];\r\nlet finishedWrite = false;\r\nlet finishedRead = false;\r\nlet finishedDel = false;\r\nconst restBase = 'options';\r\nconst renameBase = `${restBase}/rename`;\r\nconst copyBase = `${restBase}/copy`;\r\nconst path = `${nameSpace}/${restBase}`;\r\n\r\n/* Get the fields whose action is selected to 'write' */\r\nfunction getWriteFields(row) {\r\n  const { index } = row.dataset;\r\n  const optionName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n  const emptyArray = row.querySelector('.js-emptyArray').checked;\r\n  const valueToWrite = row.querySelector('.js-metaFieldInputValue').value;\r\n\r\n  const newValue = {\r\n    index,\r\n    optionName,\r\n    emptyArray,\r\n    valueToWrite,\r\n  };\r\n\r\n  write.push(newValue);\r\n}\r\n\r\n/* Get the fields whose action is selected to 'delete' */\r\nfunction getDeleteFields(row) {\r\n  const { index } = row.dataset;\r\n  const optionName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n\r\n  const newValue = {\r\n    index,\r\n    optionName,\r\n  };\r\n\r\n  del.push(newValue);\r\n}\r\n\r\n/* Get the fields whose action is selected to 'read' */\r\nfunction getReadFields(row) {\r\n  const { index } = row.dataset;\r\n  const optionName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n\r\n  const newValue = {\r\n    index,\r\n    optionName,\r\n  };\r\n\r\n  read.push(newValue);\r\n}\r\n\r\n/* Refresh the page of the meta fields with the data received */\r\nfunction refreshPage(fields) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const field of fields) {\r\n    const { index } = field;\r\n    const row = document.querySelector(`.js-optionFieldDataRow[data-index=\"${index}\"]`);\r\n    // add/remove the red-dotted border\r\n    if (field.error === '') {\r\n      row.classList.remove('is-error');\r\n    } else {\r\n      row.classList.add('is-error');\r\n    }\r\n\r\n    row.querySelector('.js-fieldAction[value=\"read\"]').click();\r\n\r\n    row.querySelector(\r\n      '.js-fieldAction[value=\"write\"]').disabled = field.disableWrite\r\n      === 'disabled';\r\n\r\n    if (field.disableDelete === 'disabled') {\r\n      row.querySelector('.js-fieldAction[value=\"delete\"]').disabled = true;\r\n    } else {\r\n      row.querySelector('.js-fieldAction[value=\"delete\"]').disabled = false;\r\n    }\r\n\r\n    // manages the error message\r\n    const fieldErrorMessage = row.querySelector('.js-fieldErrorMessage');\r\n    if (field.fieldErrorClass === '') {\r\n      fieldErrorMessage.classList.add('is-hidden');\r\n    } else {\r\n      fieldErrorMessage.classList.remove('is-hidden');\r\n      fieldErrorMessage.innerHTML = field.error;\r\n    }\r\n\r\n    // manages the empty array checkbox\r\n    const emptyArrayCheckbox = row.querySelector('.js-emptyArray');\r\n    emptyArrayCheckbox.checked = false;\r\n    emptyArrayCheckbox.disabled = true;\r\n\r\n    // manages the date string checkbox\r\n    const dateStringCheckbox = row.querySelector('.js-dateString');\r\n    dateStringCheckbox.checked = false;\r\n    dateStringCheckbox.disabled = true;\r\n\r\n    // input value box\r\n    const metaFieldInputValue = row.querySelector('.js-metaFieldInputValue');\r\n    metaFieldInputValue.value = '';\r\n    metaFieldInputValue.disabled = true;\r\n\r\n    // Current value\r\n    const fieldCurrentValue = row.querySelector('.js-fieldCurrentValue');\r\n    fieldCurrentValue.innerHTML = JSON.parse(field.currentValue);\r\n\r\n    // Current value date-string option\r\n    const currentValueDateToggle = row.querySelector('.js-curValueDateToggle');\r\n    if (field.curValueDateToggle === 'is-visible') {\r\n      currentValueDateToggle.classList.add('is-visible');\r\n      currentValueDateToggle.classList.remove('is-hidden');\r\n    } else {\r\n      currentValueDateToggle.classList.remove('is-visible');\r\n      currentValueDateToggle.classList.add('is-hidden');\r\n    }\r\n\r\n    // Previous value\r\n    const fieldPreviousValue = row.querySelector('.js-fieldPreviousValue');\r\n    fieldPreviousValue.innerHTML = JSON.parse(field.previousValue);\r\n  }\r\n\r\n  if (finishedWrite && finishedRead && finishedDel) {\r\n    submitOptionsButton.disabled = false;\r\n    submitOptionsButton.blur();\r\n\r\n    refreshOptionArrows();\r\n\r\n    spinnerOff();\r\n    finishedWrite = false;\r\n    finishedRead = false;\r\n    finishedDel = false;\r\n  }\r\n}\r\n\r\n/* Makes the API request for the 'read' action */\r\nfunction readData() {\r\n  if (read.length === 0) {\r\n    finishedRead = true;\r\n    return;\r\n  }\r\n\r\n  const readJSON = JSON.stringify(read);\r\n  finishedRead = false;\r\n\r\n  /* Launches the Rest request to read fields */\r\n  apiFetch({\r\n    path: `${path}?options=${readJSON}`,\r\n    method: 'GET',\r\n    parse: false,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedRead = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Makes the API request for the 'write' action */\r\nfunction writeData() {\r\n  if (write.length === 0) {\r\n    finishedWrite = true;\r\n    return;\r\n  }\r\n\r\n  const writeJSON = JSON.stringify(write);\r\n  finishedWrite = false;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'POST',\r\n    body: writeJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedWrite = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Makes the API request for the 'delete' action */\r\nfunction deleteData() {\r\n  if (del.length === 0) {\r\n    finishedDel = true;\r\n    return;\r\n  }\r\n\r\n  const delJSON = JSON.stringify(del);\r\n  finishedDel = false;\r\n\r\n  /* Launches the Rest request to delete fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'DELETE',\r\n    body: delJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedDel = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Gets the content of the form for the 'read|write|delete' actions */\r\nfunction getMetaForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  submitOptionsButton.disabled = true;\r\n\r\n  write = [];\r\n  read = [];\r\n  del = [];\r\n\r\n  const rows = document.querySelectorAll('.js-optionFieldDataRow');\r\n\r\n  /* Reads all the rows and fill in the request objects */\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const row of rows) {\r\n    const fieldAction = row.querySelector('.js-fieldAction:checked').value;\r\n\r\n    if (fieldAction === 'write') {\r\n      getWriteFields(row);\r\n    }\r\n\r\n    if (fieldAction === 'delete') {\r\n      getDeleteFields(row);\r\n    }\r\n\r\n    if (fieldAction === 'read') {\r\n      getReadFields(row);\r\n    }\r\n  }\r\n\r\n  /* Once all the rows have been read, launches the actions */\r\n  readData();\r\n  writeData();\r\n  deleteData();\r\n}\r\n\r\n/* Refresh the rename section if the action has been completed successfully */\r\nfunction refreshRenamePage(fields) {\r\n  let lightbox;\r\n\r\n  const oldOption = document.querySelector('.js-oldOptionName');\r\n  const newOption = document.querySelector('.js-newOptionName');\r\n\r\n  if (!fields.renamed) {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'jelly',\r\n      closeAnimation: 'collapse',\r\n    });\r\n    lightbox.setTitle('ERROR');\r\n  } else {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'fadein',\r\n      closeAnimation: 'shrink',\r\n    });\r\n    lightbox.setTitle('Done');\r\n    // eslint-disable-next-line no-param-reassign\r\n    oldOption.value = '';\r\n    // eslint-disable-next-line no-param-reassign\r\n    newOption.value = '';\r\n  }\r\n\r\n  lightbox.setContent(fields.message);\r\n\r\n  lightbox.open();\r\n\r\n  spinnerOff();\r\n  renameOptionsButton.disabled = false;\r\n}\r\n\r\n/* Gets the content of the form for the 'rename' action */\r\nfunction getRenameForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  renameOptionsButton.disabled = true;\r\n\r\n  const oldOptionName = document.querySelector('.js-oldOptionName').value;\r\n  const newOptionName = document.querySelector('.js-newOptionName').value;\r\n\r\n  /* Prepares the object for the Rest request */\r\n  const rename = {\r\n    oldOptionName,\r\n    newOptionName,\r\n  };\r\n\r\n  const renameJSON = JSON.stringify(rename);\r\n\r\n  /* Launches the Rest request to rename fields */\r\n  apiFetch({\r\n    path: `${nameSpace}/${renameBase}`,\r\n    method: 'POST',\r\n    body: renameJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      refreshRenamePage(fields);\r\n    });\r\n}\r\n\r\n/* Refresh the copy section if the action has been completed successfully */\r\nfunction refreshCopyPage(fields, copySelection) {\r\n  let checkboxCreate;\r\n  let newOption;\r\n  let userID;\r\n  let userField;\r\n  let postID;\r\n  let postField;\r\n  let lightbox;\r\n\r\n  const currentOption = document.querySelector('.js-currentOptionName');\r\n\r\n  if (fields.copied) {\r\n    currentOption.value = '';\r\n\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'fadein',\r\n      closeAnimation: 'shrink',\r\n    });\r\n    lightbox.setTitle('Done');\r\n\r\n    switch (copySelection) {\r\n      case 'option':\r\n        newOption = document.querySelector('.js-copyOptionToOptionName');\r\n        checkboxCreate = document.querySelector('.js-copyOptionToOptionCreate');\r\n        newOption.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      case 'user field':\r\n        userID = document.querySelector('.js-optToUserFieldID');\r\n        userField = document.querySelector('.js-optToUserFieldName');\r\n        checkboxCreate = document.querySelector('.js-optToUserFieldCreate');\r\n        userID.value = '';\r\n        userField.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      case 'post field':\r\n        postID = document.querySelector('.js-optToPostFieldID');\r\n        postField = document.querySelector('.js-optToPostFieldName');\r\n        checkboxCreate = document.querySelector('.js-optToPostFieldCreate');\r\n        postID.value = '';\r\n        postField.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      default:\r\n    }\r\n  } else {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'jelly',\r\n      closeAnimation: 'collapse',\r\n    });\r\n    lightbox.setTitle('ERROR');\r\n  }\r\n  lightbox.setContent(fields.message);\r\n\r\n  lightbox.open();\r\n\r\n  spinnerOff();\r\n  copyOptionsButton.disabled = false;\r\n}\r\n\r\n/* Gets the content of the form for the 'copy' action */\r\nfunction getCopyForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  copyOptionsButton.disabled = true;\r\n\r\n  let copy;\r\n  let checkboxCreate;\r\n  let newOption;\r\n  let userID;\r\n  let userField;\r\n  let postID;\r\n  let postField;\r\n\r\n  const currentOption = document.querySelector('.js-currentOptionName').value;\r\n  const copySelection = document.querySelector('input[type=radio][name=copy_option_to]:checked').value;\r\n\r\n  /* Checks where we must copy the option to and prepares the appropriate object for the Rest request */\r\n  switch (copySelection) {\r\n    case 'option':\r\n      newOption = document.querySelector('.js-copyOptionToOptionName').value;\r\n      checkboxCreate = document.querySelector('.js-copyOptionToOptionCreate').checked;\r\n      copy = {\r\n        currentOption,\r\n        copySelection,\r\n        newOption,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    case 'user field':\r\n      userID = document.querySelector('.js-optToUserFieldID').value;\r\n      userField = document.querySelector('.js-optToUserFieldName').value;\r\n      checkboxCreate = document.querySelector('.js-optToUserFieldCreate').checked;\r\n      copy = {\r\n        currentOption,\r\n        copySelection,\r\n        userID,\r\n        userField,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    case 'post field':\r\n      postID = document.querySelector('.js-optToPostFieldID').value;\r\n      postField = document.querySelector('.js-optToPostFieldName').value;\r\n      checkboxCreate = document.querySelector('.js-optToPostFieldCreate').checked;\r\n      copy = {\r\n        currentOption,\r\n        copySelection,\r\n        postID,\r\n        postField,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const copyJSON = JSON.stringify(copy);\r\n\r\n  /* Launches the Rest request to copy fields */\r\n  apiFetch({\r\n    path: `${nameSpace}/${copyBase}`,\r\n    method: 'POST',\r\n    body: copyJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      refreshCopyPage(fields, copySelection);\r\n    });\r\n}\r\n\r\n// submitOptionsButton.addEventListener('click', getMetaForm, false);\r\nrenameOptionsButton.addEventListener('click', getRenameForm, false);\r\ncopyOptionsButton.addEventListener('click', getCopyForm, true);\r\n","/* eslint-disable function-paren-newline */\r\n// eslint-disable-next-line import/extensions\r\nimport { spinnerOn, spinnerOff, nameSpace } from './functions.js';\r\n// eslint-disable-next-line import/extensions\r\nimport { refreshPostArrows } from './add-remove-meta-row.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst submitPostFieldsButton = document.querySelector('.js-submitPostFields');\r\nconst renamePostFieldsButton = document.querySelector('.js-submitRenamePostField');\r\nconst copyPostFieldsButton = document.querySelector('.js-submitCopyPostField');\r\nlet read = [];\r\nlet write = [];\r\nlet del = [];\r\nlet finishedWrite = false;\r\nlet finishedRead = false;\r\nlet finishedDel = false;\r\nconst restBase = 'post_fields';\r\nconst renameBase = `${restBase}/rename`;\r\nconst copyBase = `${restBase}/copy`;\r\nconst path = `${nameSpace}/${restBase}`;\r\n\r\n/* Get the fields whose action is selected to 'write' */\r\nfunction getWriteFields(row) {\r\n  const { index } = row.dataset;\r\n  const postID = row.querySelector(`input[name=\"post_id[${index}]\"]`).value;\r\n  const fieldName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n  const emptyArray = row.querySelector('.js-emptyArray').checked;\r\n  const valueToWrite = row.querySelector('.js-metaFieldInputValue').value;\r\n\r\n  const newValue = {\r\n    index,\r\n    postID,\r\n    fieldName,\r\n    emptyArray,\r\n    valueToWrite,\r\n  };\r\n\r\n  write.push(newValue);\r\n}\r\n\r\n/* Get the fields whose action is selected to 'delete' */\r\nfunction getDeleteFields(row) {\r\n  const { index } = row.dataset;\r\n  const postID = row.querySelector(`input[name=\"post_id[${index}]\"]`).value;\r\n  const fieldName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n\r\n  const newValue = {\r\n    index,\r\n    postID,\r\n    fieldName,\r\n  };\r\n\r\n  del.push(newValue);\r\n}\r\n\r\n/* Get the fields whose action is selected to 'read' */\r\nfunction readFields(row) {\r\n  const { index } = row.dataset;\r\n  const postID = row.querySelector(`input[name=\"post_id[${index}]\"]`).value;\r\n  const fieldName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n\r\n  const newValue = {\r\n    index,\r\n    postID,\r\n    fieldName,\r\n  };\r\n\r\n  read.push(newValue);\r\n}\r\n\r\n/* Refresh the page of the meta fields with the data received */\r\nfunction refreshPage(fields) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const field of fields) {\r\n    const { index } = field;\r\n    const row = document.querySelector(`.js-postFieldsDataRow[data-index=\"${index}\"]`);\r\n    // add/remove the red-dotted border\r\n    if (field.error === '') {\r\n      row.classList.remove('is-error');\r\n    } else {\r\n      row.classList.add('is-error');\r\n    }\r\n\r\n    row.querySelector('.js-fieldAction[value=\"read\"]').click();\r\n\r\n    row.querySelector(\r\n      '.js-fieldAction[value=\"write\"]').disabled = field.disableWrite\r\n      === 'disabled';\r\n\r\n    if (field.disableDelete === 'disabled') {\r\n      row.querySelector('.js-fieldAction[value=\"delete\"]').disabled = true;\r\n    } else {\r\n      row.querySelector('.js-fieldAction[value=\"delete\"]').disabled = false;\r\n    }\r\n\r\n    // manages the error message\r\n    const fieldErrorMessage = row.querySelector('.js-fieldErrorMessage');\r\n    if (field.fieldErrorClass === '') {\r\n      fieldErrorMessage.classList.add('is-hidden');\r\n    } else {\r\n      fieldErrorMessage.classList.remove('is-hidden');\r\n      fieldErrorMessage.innerHTML = field.error;\r\n    }\r\n\r\n    // manages the empty array checkbox\r\n    const emptyArrayCheckbox = row.querySelector('.js-emptyArray');\r\n    emptyArrayCheckbox.checked = false;\r\n    emptyArrayCheckbox.disabled = true;\r\n\r\n    // manages the date string checkbox\r\n    const dateStringCheckbox = row.querySelector('.js-dateString');\r\n    dateStringCheckbox.checked = false;\r\n    dateStringCheckbox.disabled = true;\r\n\r\n    // input value box\r\n    const metaFieldInputValue = row.querySelector('.js-metaFieldInputValue');\r\n    metaFieldInputValue.value = '';\r\n    metaFieldInputValue.disabled = true;\r\n\r\n    // Current value\r\n    const fieldCurrentValue = row.querySelector('.js-fieldCurrentValue');\r\n    fieldCurrentValue.innerHTML = JSON.parse(field.currentValue);\r\n\r\n    // Current value date-string option\r\n    const currentValueDateToggle = row.querySelector('.js-curValueDateToggle');\r\n    if (field.curValueDateToggle === 'is-visible') {\r\n      currentValueDateToggle.classList.add('is-visible');\r\n      currentValueDateToggle.classList.remove('is-hidden');\r\n    } else {\r\n      currentValueDateToggle.classList.remove('is-visible');\r\n      currentValueDateToggle.classList.add('is-hidden');\r\n    }\r\n\r\n    // Previous value\r\n    const fieldPreviousValue = row.querySelector('.js-fieldPreviousValue');\r\n    fieldPreviousValue.innerHTML = JSON.parse(field.previousValue);\r\n  }\r\n\r\n  if (finishedWrite && finishedRead && finishedDel) {\r\n    submitPostFieldsButton.disabled = false;\r\n    submitPostFieldsButton.blur();\r\n\r\n    refreshPostArrows();\r\n\r\n    spinnerOff();\r\n    finishedWrite = false;\r\n    finishedRead = false;\r\n    finishedDel = false;\r\n  }\r\n}\r\n\r\n/* Makes the API request for the 'read' action */\r\nfunction readData() {\r\n  if (read.length === 0) {\r\n    finishedRead = true;\r\n    return;\r\n  }\r\n\r\n  const readJSON = JSON.stringify(read);\r\n  finishedRead = false;\r\n\r\n  /* Launches the Rest request to read fields */\r\n  apiFetch({\r\n    path: `${path}?post_fields=${readJSON}`,\r\n    method: 'GET',\r\n    parse: false,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedRead = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Makes the API request for the 'write' action */\r\nfunction writeData() {\r\n  if (write.length === 0) {\r\n    finishedWrite = true;\r\n    return;\r\n  }\r\n\r\n  const writeJSON = JSON.stringify(write);\r\n  finishedWrite = false;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'POST',\r\n    body: writeJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedWrite = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Makes the API request for the 'delete' action */\r\nfunction deleteData() {\r\n  if (del.length === 0) {\r\n    finishedDel = true;\r\n    return;\r\n  }\r\n\r\n  const delJSON = JSON.stringify(del);\r\n  finishedDel = false;\r\n\r\n  /* Launches the Rest request to delete fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'DELETE',\r\n    body: delJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedDel = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Gets the content of the form for the 'read|write|delete' actions */\r\nfunction getMetaForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  submitPostFieldsButton.disabled = true;\r\n\r\n  write = [];\r\n  read = [];\r\n  del = [];\r\n\r\n  const rows = document.querySelectorAll('.js-postFieldsDataRow');\r\n\r\n  /* Reads all the rows and fill in the request objects */\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const row of rows) {\r\n    const fieldAction = row.querySelector('.js-fieldAction:checked').value;\r\n\r\n    if (fieldAction === 'write') {\r\n      getWriteFields(row);\r\n    }\r\n\r\n    if (fieldAction === 'delete') {\r\n      getDeleteFields(row);\r\n    }\r\n\r\n    if (fieldAction === 'read') {\r\n      readFields(row);\r\n    }\r\n  }\r\n\r\n  /* Once all the rows have been read, launches the actions */\r\n  readData();\r\n  writeData();\r\n  deleteData();\r\n}\r\n\r\n/* Refresh the rename section if the action has been completed successfully */\r\nfunction refreshRenamePage(fields) {\r\n  let lightbox;\r\n\r\n  const postID = document.querySelector('.js-postFieldRenamePostID');\r\n  const oldFieldName = document.querySelector('.js-oldPostFieldName');\r\n  const newFieldName = document.querySelector('.js-newPostFieldName');\r\n\r\n  if (!fields.renamed) {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'jelly',\r\n      closeAnimation: 'collapse',\r\n    });\r\n    lightbox.setTitle('ERROR');\r\n  } else {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'fadein',\r\n      closeAnimation: 'shrink',\r\n    });\r\n    lightbox.setTitle('Done');\r\n    // eslint-disable-next-line no-param-reassign\r\n    postID.value = '';\r\n    // eslint-disable-next-line no-param-reassign\r\n    oldFieldName.value = '';\r\n    // eslint-disable-next-line no-param-reassign\r\n    newFieldName.value = '';\r\n  }\r\n\r\n  lightbox.setContent(fields.message);\r\n\r\n  lightbox.open();\r\n\r\n  spinnerOff();\r\n  renamePostFieldsButton.disabled = false;\r\n}\r\n\r\n/* Gets the content of the form for the 'rename' action */\r\nfunction getRenameForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  renamePostFieldsButton.disabled = true;\r\n\r\n  const postID = document.querySelector('.js-postFieldRenamePostID').value;\r\n  const oldFieldName = document.querySelector('.js-oldPostFieldName').value;\r\n  const newFieldName = document.querySelector('.js-newPostFieldName').value;\r\n\r\n  /* Prepares the object for the Rest request */\r\n  const rename = {\r\n    postID,\r\n    oldFieldName,\r\n    newFieldName,\r\n  };\r\n\r\n  const renameJSON = JSON.stringify(rename);\r\n\r\n  /* Launches the Rest request to rename fields */\r\n  apiFetch({\r\n    path: `${nameSpace}/${renameBase}`,\r\n    method: 'POST',\r\n    body: renameJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      refreshRenamePage(fields);\r\n    });\r\n}\r\n\r\n/* Refresh the copy section if the action has been completed successfully */\r\nfunction refreshCopyPage(fields, copySelection) {\r\n  let checkboxCreate;\r\n  let newOption;\r\n  let postID;\r\n  let userField;\r\n  let userID;\r\n  let postField;\r\n  let lightbox;\r\n\r\n  const currentPostID = document.querySelector('.js-postFieldCopyPostID');\r\n  const currentPostField = document.querySelector('.js-postFieldCopyFieldName');\r\n\r\n  if (fields.copied) {\r\n    currentPostID.value = '';\r\n    currentPostField.value = '';\r\n\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'fadein',\r\n      closeAnimation: 'shrink',\r\n    });\r\n    lightbox.setTitle('Done');\r\n\r\n    switch (copySelection) {\r\n      case 'option':\r\n        newOption = document.querySelector('.js-postFieldToOptionName');\r\n        checkboxCreate = document.querySelector('.js-postFieldToOptionCreate');\r\n        newOption.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      case 'user field':\r\n        userID = document.querySelector('.js-postFieldToUserFieldID');\r\n        userField = document.querySelector('.js-postFieldToUserFieldName');\r\n        checkboxCreate = document.querySelector('.js-postFieldToUserFieldCreate');\r\n        userID.value = '';\r\n        userField.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      case 'post field':\r\n        postID = document.querySelector('.js-postFieldToPostFieldID');\r\n        postField = document.querySelector('.js-postFieldToPostFieldName');\r\n        checkboxCreate = document.querySelector('.js-postFieldToPostFieldCreate');\r\n        postID.value = '';\r\n        postField.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      default:\r\n    }\r\n  } else {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'jelly',\r\n      closeAnimation: 'collapse',\r\n    });\r\n    lightbox.setTitle('ERROR');\r\n  }\r\n  lightbox.setContent(fields.message);\r\n\r\n  lightbox.open();\r\n\r\n  spinnerOff();\r\n  copyPostFieldsButton.disabled = false;\r\n}\r\n\r\n/* Gets the content of the form for the 'copy' action */\r\nfunction getCopyForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  copyPostFieldsButton.disabled = true;\r\n\r\n  let copy;\r\n  let checkboxCreate;\r\n  let newOption;\r\n  let userID;\r\n  let userField;\r\n  let postID;\r\n  let postField;\r\n\r\n  const currentPostID = document.querySelector('.js-postFieldCopyPostID').value;\r\n  const currentFieldName = document.querySelector('.js-postFieldCopyFieldName').value;\r\n  const copySelection = document.querySelector('input[type=radio][name=copy_post_field_to]:checked').value;\r\n\r\n  /* Checks where we must copy the user field to and prepares the appropriate object for the Rest request */\r\n  switch (copySelection) {\r\n    case 'option':\r\n      newOption = document.querySelector('.js-postFieldToOptionName').value;\r\n      checkboxCreate = document.querySelector('.js-postFieldToOptionCreate').checked;\r\n      copy = {\r\n        currentPostID,\r\n        currentFieldName,\r\n        copySelection,\r\n        newOption,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    case 'user field':\r\n      userID = document.querySelector('.js-postFieldToUserFieldID').value;\r\n      userField = document.querySelector('.js-postFieldToUserFieldName').value;\r\n      checkboxCreate = document.querySelector('.js-postFieldToUserFieldCreate').checked;\r\n      copy = {\r\n        currentPostID,\r\n        currentFieldName,\r\n        copySelection,\r\n        userID,\r\n        userField,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    case 'post field':\r\n      postID = document.querySelector('.js-postFieldToPostFieldID').value;\r\n      postField = document.querySelector('.js-postFieldToPostFieldName').value;\r\n      checkboxCreate = document.querySelector('.js-postFieldToPostFieldCreate').checked;\r\n      copy = {\r\n        currentPostID,\r\n        currentFieldName,\r\n        copySelection,\r\n        postID,\r\n        postField,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const copyJSON = JSON.stringify(copy);\r\n\r\n  /* Launches the Rest request to copy fields */\r\n  apiFetch({\r\n    path: `${nameSpace}/${copyBase}`,\r\n    method: 'POST',\r\n    body: copyJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      refreshCopyPage(fields, copySelection);\r\n    });\r\n}\r\n\r\n// submitPostFieldsButton.addEventListener('click', getMetaForm, false);\r\nrenamePostFieldsButton.addEventListener('click', getRenameForm, false);\r\ncopyPostFieldsButton.addEventListener('click', getCopyForm, true);\r\n","// eslint-disable-next-line import/extensions\r\nimport { refreshOptionArrows, refreshUserArrows, refreshPostArrows } from './add-remove-meta-row.js';\r\n\r\nconst tab1 = document.querySelector('.js-tab_1');\r\nconst tab2 = document.querySelector('.js-tab_2');\r\nconst tab3 = document.querySelector('.js-tab_3');\r\nconst optionsForm = document.querySelector('.js-optionsForm');\r\nconst userFieldsForm = document.querySelector('.js-userFieldsForm');\r\nconst postFieldsForm = document.querySelector('.js-postFieldsForm');\r\n\r\nconst hideOptionsTab = function() {\r\n  tab1.classList.remove('nav-tab-active');\r\n  optionsForm.classList.add('is-hidden');\r\n};\r\n\r\nconst hideUsersTab = function() {\r\n  tab2.classList.remove('nav-tab-active');\r\n  userFieldsForm.classList.add('is-hidden');\r\n};\r\n\r\nconst hidePostsTab = function() {\r\n  tab3.classList.remove('nav-tab-active');\r\n  postFieldsForm.classList.add('is-hidden');\r\n};\r\n\r\nconst switchToOptionsTab = function (e) {\r\n  e.preventDefault();\r\n\r\n  /* activate clicked tab and make section visible */\r\n  tab1.classList.add('nav-tab-active');\r\n  optionsForm.classList.remove('is-hidden');\r\n  tab1.blur();\r\n  refreshOptionArrows();\r\n\r\n  /* deactivate other tabs and hides sections */\r\n  hideUsersTab();\r\n  hidePostsTab();\r\n};\r\n\r\nconst switchToUsersTab = function (e) {\r\n  e.preventDefault();\r\n\r\n  /* activate clicked tab and make section visible */\r\n  tab2.classList.add('nav-tab-active');\r\n  userFieldsForm.classList.remove('is-hidden');\r\n  tab2.blur();\r\n  refreshUserArrows();\r\n\r\n  /* deactivate other tabs and hides sections */\r\n  hideOptionsTab();\r\n  hidePostsTab();\r\n};\r\n\r\nconst switchToPostsTab = function (e) {\r\n  e.preventDefault();\r\n\r\n  /* activate clicked tab and make section visible */\r\n  tab3.classList.add('nav-tab-active');\r\n  postFieldsForm.classList.remove('is-hidden');\r\n  tab3.blur();\r\n  refreshPostArrows();\r\n\r\n  /* deactivate other tabs and hides sections */\r\n  hideOptionsTab();\r\n  hideUsersTab();\r\n};\r\n\r\ntab1.addEventListener('click', switchToOptionsTab, false);\r\ntab2.addEventListener('click', switchToUsersTab, false);\r\ntab3.addEventListener('click', switchToPostsTab, false);\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions,react/jsx-no-undef */\r\nimport React, {\r\n  useState, useEffect, useCallback, createRef,\r\n} from 'react';\r\nimport OptionsMetaHeaders from './components/OptionsMetaHeaders.js';\r\nimport OptionsMetaRow from './components/OptionsMetaRow.js';\r\nimport { nameSpace, spinnerOff, spinnerOn } from './functions.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst restBase = 'options';\r\nconst path = `${nameSpace}/${restBase}`;\r\n\r\nfunction TabOptionsMeta() {\r\n  const [rows, setRows] = useState([]);\r\n  const [form, setForm] = useState([]);\r\n  const [resetPage, setResetPage] = useState(false);\r\n  const submitOptionsButtonRef = createRef();\r\n  let read = [];\r\n  let write = [];\r\n  let del = [];\r\n  let finishedRead = false;\r\n  let finishedWrite = false;\r\n  let finishedDel = false;\r\n\r\n  /* Refresh the content of the meta rows after all read/write operations are finished */\r\n  function refreshPage() {\r\n    if (!finishedRead || !finishedWrite || !finishedDel) return;\r\n    const newOptions = read.concat(write).concat(del);\r\n    const sortedOptions = newOptions.sort((a, b) => {\r\n      if (a.index < b.index) return -1;\r\n      return 1;\r\n    });\r\n    setRows(sortedOptions);\r\n    setResetPage(true);\r\n    spinnerOff();\r\n  }\r\n\r\n  /* Makes the API request for the 'read' action */\r\n  function readData(dataToRead) {\r\n    if (dataToRead.length === 0) {\r\n      finishedRead = true;\r\n      return;\r\n    }\r\n\r\n    const readJSON = JSON.stringify(dataToRead);\r\n    finishedRead = false;\r\n\r\n    /* Launches the Rest request to read fields */\r\n    apiFetch({\r\n      path: `${path}?${restBase}=${readJSON}`,\r\n      method: 'GET',\r\n      parse: false,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedRead = true;\r\n        read = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Makes the API request for the 'write' action */\r\n  function writeData(dataToWrite) {\r\n    if (dataToWrite.length === 0) {\r\n      finishedWrite = true;\r\n      return;\r\n    }\r\n\r\n    const writeJSON = JSON.stringify(dataToWrite);\r\n    finishedWrite = false;\r\n    /* Launches the Rest request to write fields */\r\n    apiFetch({\r\n      path,\r\n      method: 'POST',\r\n      body: writeJSON,\r\n      parse: false,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedWrite = true;\r\n        write = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Makes the API request for the 'delete' action */\r\n  function deleteData(dataToDelete) {\r\n    if (dataToDelete.length === 0) {\r\n      finishedDel = true;\r\n      return;\r\n    }\r\n\r\n    const delJSON = JSON.stringify(dataToDelete);\r\n    finishedDel = false;\r\n\r\n    /* Launches the Rest request to delete fields */\r\n    apiFetch({\r\n      path,\r\n      method: 'DELETE',\r\n      body: delJSON,\r\n      parse: false,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedDel = true;\r\n        del = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Called when the submit button is clicked. Launches the read, write and delete operations */\r\n  function submitOptions(options) {\r\n    const readLocal = [];\r\n    const writeLocal = [];\r\n    const delLocal = [];\r\n    let newRead = {};\r\n    let newWrite = {};\r\n    let newDel = {};\r\n\r\n    options.forEach((option) => {\r\n      if (option.action === 'read') {\r\n        newRead = {\r\n          index: option.index,\r\n          optionName: option.optionName,\r\n        };\r\n        readLocal.push(newRead);\r\n      } else if (option.action === 'write') {\r\n        newWrite = {\r\n          index: option.index,\r\n          optionName: option.optionName,\r\n          emptyArray: option.emptyArray,\r\n          valueToWrite: option.valueToWrite,\r\n        };\r\n        writeLocal.push(newWrite);\r\n      } else if (option.action === 'delete') {\r\n        newDel = {\r\n          index: option.index,\r\n          optionName: option.optionName,\r\n        };\r\n        delLocal.push(newDel);\r\n      }\r\n    });\r\n\r\n    spinnerOn();\r\n\r\n    finishedRead = false;\r\n    readData(readLocal);\r\n\r\n    finishedWrite = false;\r\n    writeData(writeLocal);\r\n\r\n    finishedDel = false;\r\n    deleteData(delLocal);\r\n  }\r\n\r\n  function requestSubmit(e) {\r\n    e.preventDefault();\r\n    submitOptions(form);\r\n  }\r\n\r\n  /* Initializes the form at the first page load.\r\n  * Gets the array containing the previous options stored in the DB */\r\n  useEffect(() => {\r\n    const readJSON = JSON.stringify('all');\r\n\r\n    /* Launches the Rest request to read fields */\r\n    apiFetch({\r\n      path: `${path}?all_options=${readJSON}`,\r\n      method: 'GET',\r\n      parse: false,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((metaFields) => {\r\n        const formTemp = [];\r\n        setRows(metaFields);\r\n        // eslint-disable-next-line array-callback-return\r\n        metaFields.map((row, index) => {\r\n          formTemp[index] = {\r\n            index: row.index,\r\n            optionName: row.fieldName,\r\n            emptyArray: '',\r\n            action: 'read',\r\n            valueToWrite: '',\r\n          };\r\n        });\r\n        setForm(formTemp);\r\n        // After we get the previous options from the DB we must refresh them to get their current value.\r\n        // The state variable 'form' is available only at the next refresh so in order to avoid passing an empty parameter\r\n        // now we have to pass the current variable\r\n        submitOptions(formTemp);\r\n      });\r\n  }, []);\r\n\r\n  /* Called from downstream when the user manipulates the form fields.\r\n  * This form is what is sent to the server when the user clicks the 'read/write values' button */\r\n  const updateForm = useCallback((formRow) => {\r\n    const temp = {\r\n      index: formRow.index,\r\n      optionName: formRow.optionName,\r\n      emptyArray: formRow.emptyArray,\r\n      action: formRow.action,\r\n      valueToWrite: formRow.valueToWrite,\r\n    };\r\n    const formTemp = form;\r\n    formTemp[formRow.rowIndex] = temp;\r\n    setForm(formTemp);\r\n  }, [form]);\r\n\r\n  /* Regenerates the form array when meta rows are added or removed */\r\n  function regenerateForm(newRows) {\r\n    const newForm = new Array(newRows.length);\r\n    newRows.forEach((row, index) => {\r\n      newForm[index] = {\r\n        index: row.index,\r\n        optionName: row.optionName,\r\n        emptyArray: row.emptyArray,\r\n        action: row.action,\r\n        valueToWrite: row.valueToWrite,\r\n      };\r\n    });\r\n    setForm(newForm);\r\n  }\r\n\r\n  /* After a REST request is made to the backend, the state variable 'resetPage' restores */\r\n  function restoreEvent() {\r\n    setResetPage(false);\r\n  }\r\n\r\n  function addRemoveMetaRows(index, content) {\r\n    const updateBase = `${restBase}/update`;\r\n    const newPath = `${nameSpace}/${updateBase}`;\r\n\r\n    if (content === '+') {\r\n      const lastElement = rows[rows.length - 1];\r\n      const newIndex = parseInt(lastElement.index, 10) + 1;\r\n      const newRow = {\r\n        fieldID: false,\r\n        fieldName: '',\r\n        index: newIndex,\r\n        currentValueDateToggle: 'is-hidden',\r\n        currentValue: JSON.stringify(''),\r\n        disableDelete: true,\r\n        disableWrite: true,\r\n        error: '',\r\n        previousValue: JSON.stringify(''),\r\n        rowErrorClass: '',\r\n      };\r\n      const addJSON = JSON.stringify(newIndex);\r\n      spinnerOn();\r\n      /* TODO submitOptionsButtonRef is empty: WHY??? */\r\n      // submitOptionsButtonRef.current.disabled = true;\r\n\r\n      /* Launches the Rest request to write fields */\r\n      apiFetch({\r\n        path: newPath,\r\n        method: 'POST',\r\n        body: addJSON,\r\n        parse: false,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((fields) => {\r\n          // submitOptionsButtonRef.current.disabled = false;\r\n          // submitOptionsButtonRef.current.blur();\r\n          spinnerOff();\r\n          if (!fields.error) {\r\n            setRows([...rows, newRow]);\r\n            regenerateForm([...rows, newRow]);\r\n          }\r\n        });\r\n    } else {\r\n      const rowIndex = rows.findIndex((row) => row.index === parseInt(index, 10));\r\n      rows.splice(rowIndex, 1);\r\n\r\n      const removeJSON = JSON.stringify(rows);\r\n      spinnerOn();\r\n      // submitUserButton.disabled = true;\r\n\r\n      /* Launches the Rest request to write fields */\r\n      apiFetch({\r\n        path: newPath,\r\n        method: 'DELETE',\r\n        body: removeJSON,\r\n        parse: false,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((fields) => {\r\n        // submitUserButton.disabled = false;\r\n        // submitUserButton.blur();\r\n          spinnerOff();\r\n          if (!fields.error) {\r\n            setRows([...rows]);\r\n            regenerateForm(rows);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"js-optionsMetaSection o-meta\">\r\n        <OptionsMetaHeaders className=\"c-optionsMetaHeaders\" />\r\n        {rows.map((row, index) => {\r\n          let arrowTitle = 'Add another row';\r\n          let arrowContent = '+';\r\n          if (index + 1 < rows.length) {\r\n            arrowTitle = 'Remove the next row';\r\n            arrowContent = '-';\r\n          }\r\n          return (\r\n            <OptionsMetaRow\r\n              className=\"js-optionFieldDataRow c-optionField\"\r\n              rowIndex={index}\r\n              dataIndex={row.index}\r\n              fieldName={row.fieldName}\r\n              errorClass={row.rowErrorClass}\r\n              errorMessage={row.error}\r\n              currentValue={JSON.parse(row.currentValue)}\r\n              previousValue={JSON.parse(row.previousValue)}\r\n              disableWrite={row.disableWrite}\r\n              disableDelete={row.disableDelete}\r\n              arrowTitle={arrowTitle}\r\n              arrowContent={arrowContent}\r\n              arrowClick={addRemoveMetaRows}\r\n              rowChange={updateForm}\r\n              resetPage={resetPage}\r\n              restoreEvent={restoreEvent}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <input\r\n        className=\"js-submitOptions c-metaSubmitButton button button-primary\"\r\n        type=\"submit\"\r\n        name=\"submit_options\"\r\n        value=\"Read/Write Values\"\r\n        ref={submitOptionsButtonRef}\r\n        onClick={requestSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TabOptionsMeta;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions,react/jsx-no-undef */\r\nimport React, {\r\n  useState, useEffect, useCallback, createRef,\r\n} from 'react';\r\nimport PostsMetaHeaders from './components/PostsMetaHeaders.js';\r\nimport PostsMetaRow from './components/PostsMetaRow.js';\r\nimport { nameSpace, spinnerOff, spinnerOn } from './functions.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst restBase = 'post_fields';\r\nconst path = `${nameSpace}/${restBase}`;\r\n\r\nfunction TabPostsMeta() {\r\n  const [rows, setRows] = useState([]);\r\n  const [form, setForm] = useState([]);\r\n  const [resetPage, setResetPage] = useState(false);\r\n  const submitPostsButtonRef = createRef();\r\n  let read = [];\r\n  let write = [];\r\n  let del = [];\r\n  let finishedRead = false;\r\n  let finishedWrite = false;\r\n  let finishedDel = false;\r\n\r\n  /* Refresh the content of the meta rows after all read/write operations are finished */\r\n  function refreshPage() {\r\n    if (!finishedRead || !finishedWrite || !finishedDel) return;\r\n    const newPostsMeta = read.concat(write).concat(del);\r\n    const sortedPosts = newPostsMeta.sort((a, b) => {\r\n      if (a.index < b.index) return -1;\r\n      return 1;\r\n    });\r\n    setRows(sortedPosts);\r\n    setResetPage(true);\r\n    spinnerOff();\r\n  }\r\n\r\n  /* Makes the API request for the 'read' action */\r\n  function readData(dataToRead) {\r\n    if (dataToRead.length === 0) {\r\n      finishedRead = true;\r\n      return;\r\n    }\r\n\r\n    const readJSON = JSON.stringify(dataToRead);\r\n    finishedRead = false;\r\n\r\n    /* Launches the Rest request to read fields */\r\n    apiFetch({\r\n      path: `${path}?${restBase}=${readJSON}`,\r\n      method: 'GET',\r\n      parse: false,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedRead = true;\r\n        read = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Makes the API request for the 'write' action */\r\n  function writeData(dataToWrite) {\r\n    if (dataToWrite.length === 0) {\r\n      finishedWrite = true;\r\n      return;\r\n    }\r\n\r\n    const writeJSON = JSON.stringify(dataToWrite);\r\n    finishedWrite = false;\r\n    /* Launches the Rest request to write fields */\r\n    apiFetch({\r\n      path,\r\n      method: 'POST',\r\n      body: writeJSON,\r\n      parse: false,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedWrite = true;\r\n        write = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Makes the API request for the 'delete' action */\r\n  function deleteData(dataToDelete) {\r\n    if (dataToDelete.length === 0) {\r\n      finishedDel = true;\r\n      return;\r\n    }\r\n\r\n    const delJSON = JSON.stringify(dataToDelete);\r\n    finishedDel = false;\r\n\r\n    /* Launches the Rest request to delete fields */\r\n    apiFetch({\r\n      path,\r\n      method: 'DELETE',\r\n      body: delJSON,\r\n      parse: false,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedDel = true;\r\n        del = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Called when the submit button is clicked. Launches the read, write and delete operations */\r\n  function submitPostsMeta(posts) {\r\n    const readLocal = [];\r\n    const writeLocal = [];\r\n    const delLocal = [];\r\n    let newRead = {};\r\n    let newWrite = {};\r\n    let newDel = {};\r\n\r\n    posts.forEach((post) => {\r\n      if (post.action === 'read') {\r\n        newRead = {\r\n          index: post.index,\r\n          postID: post.postID,\r\n          fieldName: post.fieldName,\r\n        };\r\n        readLocal.push(newRead);\r\n      } else if (post.action === 'write') {\r\n        newWrite = {\r\n          index: post.index,\r\n          postID: post.postID,\r\n          fieldName: post.fieldName,\r\n          emptyArray: post.emptyArray,\r\n          valueToWrite: post.valueToWrite,\r\n        };\r\n        writeLocal.push(newWrite);\r\n      } else if (post.action === 'delete') {\r\n        newDel = {\r\n          index: post.index,\r\n          postID: post.postID,\r\n          fieldName: post.fieldName,\r\n        };\r\n        delLocal.push(newDel);\r\n      }\r\n    });\r\n\r\n    spinnerOn();\r\n\r\n    finishedRead = false;\r\n    readData(readLocal);\r\n\r\n    finishedWrite = false;\r\n    writeData(writeLocal);\r\n\r\n    finishedDel = false;\r\n    deleteData(delLocal);\r\n  }\r\n\r\n  function requestSubmit(e) {\r\n    e.preventDefault();\r\n    submitPostsMeta(form);\r\n  }\r\n\r\n  /* Initializes the form at the first page load.\r\n  * Gets the array containing the previous options stored in the DB */\r\n  useEffect(() => {\r\n    const readJSON = JSON.stringify('all');\r\n\r\n    /* Launches the Rest request to read fields */\r\n    apiFetch({\r\n      path: `${path}?all_fields=${readJSON}`,\r\n      method: 'GET',\r\n      parse: false,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((metaFields) => {\r\n        const formTemp = [];\r\n        setRows(metaFields);\r\n        // eslint-disable-next-line array-callback-return\r\n        metaFields.map((row, index) => {\r\n          formTemp[index] = {\r\n            index: row.index,\r\n            postID: row.fieldID,\r\n            fieldName: row.fieldName,\r\n            emptyArray: '',\r\n            action: 'read',\r\n            valueToWrite: '',\r\n          };\r\n\r\n          if (!row.fieldID || !row.fieldName) {\r\n            row.disableWrite = true;\r\n            row.disableDelete = true;\r\n          }\r\n        });\r\n        setForm(formTemp);\r\n        // After we get the previous options from the DB we must refresh them to get their current value.\r\n        // The state variable 'form' is available only at the next refresh so in order to avoid passing an empty parameter\r\n        // now we have to pass the current variable\r\n        submitPostsMeta(formTemp);\r\n      });\r\n  }, []);\r\n\r\n  /* Called from downstream when the user manipulates the form fields.\r\n  * This form is what is sent to the server when the user clicks the 'read/write values' button */\r\n  const updateForm = useCallback((formRow) => {\r\n    const temp = {\r\n      index: formRow.index,\r\n      postID: formRow.fieldID,\r\n      fieldName: formRow.fieldName,\r\n      emptyArray: formRow.emptyArray,\r\n      action: formRow.action,\r\n      valueToWrite: formRow.valueToWrite,\r\n    };\r\n    const formTemp = form;\r\n    formTemp[formRow.rowIndex] = temp;\r\n    setForm(formTemp);\r\n  }, [form]);\r\n\r\n  /* Regenerates the form array when meta rows are added or removed */\r\n  function regenerateForm(newRows) {\r\n    const newForm = new Array(newRows.length);\r\n    newRows.forEach((row, index) => {\r\n      newForm[index] = {\r\n        index: row.index,\r\n        postID: row.fieldID,\r\n        fieldName: row.fieldName,\r\n        emptyArray: row.emptyArray,\r\n        action: row.action,\r\n        valueToWrite: row.valueToWrite,\r\n      };\r\n    });\r\n    setForm(newForm);\r\n  }\r\n\r\n  /* After a REST request is made to the backend, the state variable 'resetPage' restores */\r\n  function restoreEvent() {\r\n    setResetPage(false);\r\n  }\r\n\r\n  function addRemoveMetaRows(index, content) {\r\n    const updateBase = `${restBase}/update`;\r\n    const newPath = `${nameSpace}/${updateBase}`;\r\n\r\n    if (content === '+') {\r\n      const lastElement = rows[rows.length - 1];\r\n      const newIndex = parseInt(lastElement.index, 10) + 1;\r\n      const newRow = {\r\n        fieldID: 0,\r\n        fieldName: '',\r\n        index: newIndex,\r\n        currentValueDateToggle: 'is-hidden',\r\n        currentValue: JSON.stringify(''),\r\n        disableDelete: true,\r\n        disableWrite: true,\r\n        error: '',\r\n        previousValue: JSON.stringify(''),\r\n        rowErrorClass: '',\r\n      };\r\n      const addJSON = JSON.stringify(newIndex);\r\n      spinnerOn();\r\n      /* TODO submitOptionsButtonRef is empty: WHY??? */\r\n      // submitOptionsButtonRef.current.disabled = true;\r\n\r\n      /* Launches the Rest request to write fields */\r\n      apiFetch({\r\n        path: newPath,\r\n        method: 'POST',\r\n        body: addJSON,\r\n        parse: false,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((fields) => {\r\n          // submitOptionsButtonRef.current.disabled = false;\r\n          // submitOptionsButtonRef.current.blur();\r\n          spinnerOff();\r\n          if (!fields.error) {\r\n            setRows([...rows, newRow]);\r\n            regenerateForm([...rows, newRow]);\r\n          }\r\n        });\r\n    } else {\r\n      // Remove the selected row from the array\r\n      const rowIndex = rows.findIndex((row) => row.index === parseInt(index, 10));\r\n      rows.splice(rowIndex, 1);\r\n\r\n      const removeJSON = JSON.stringify(rows);\r\n      spinnerOn();\r\n      // submitUserButton.disabled = true;\r\n\r\n      /* Launches the Rest request to write fields */\r\n      apiFetch({\r\n        path: newPath,\r\n        method: 'DELETE',\r\n        body: removeJSON,\r\n        parse: false,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((fields) => {\r\n        // submitUserButton.disabled = false;\r\n        // submitUserButton.blur();\r\n          spinnerOff();\r\n          if (!fields.error) {\r\n            setRows([...rows]);\r\n            regenerateForm(rows);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"js-postFieldsSection o-meta\">\r\n        <PostsMetaHeaders className=\"c-metaFieldsHeaders\" />\r\n        {rows.map((row, index) => {\r\n          let arrowTitle = 'Add another row';\r\n          let arrowContent = '+';\r\n          if (index + 1 < rows.length) {\r\n            arrowTitle = 'Remove the next row';\r\n            arrowContent = '-';\r\n          }\r\n          return (\r\n            <PostsMetaRow\r\n              className=\"js-postFieldsDataRow c-metaField\"\r\n              rowIndex={index}\r\n              dataIndex={row.index}\r\n              fieldID={row.fieldID}\r\n              fieldName={row.fieldName}\r\n              errorClass={row.rowErrorClass}\r\n              errorMessage={row.error}\r\n              currentValue={JSON.parse(row.currentValue)}\r\n              previousValue={JSON.parse(row.previousValue)}\r\n              disableWrite={row.disableWrite}\r\n              disableDelete={row.disableDelete}\r\n              arrowTitle={arrowTitle}\r\n              arrowContent={arrowContent}\r\n              arrowClick={addRemoveMetaRows}\r\n              rowChange={updateForm}\r\n              resetPage={resetPage}\r\n              restoreEvent={restoreEvent}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <input\r\n        className=\"js-submitPostFields c-metaSubmitButton button button-primary\"\r\n        type=\"submit\"\r\n        name=\"submit_post_fields\"\r\n        value=\"Read/Write Values\"\r\n        ref={submitPostsButtonRef}\r\n        onClick={requestSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TabPostsMeta;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope,react/prop-types,no-undef,react/prefer-stateless-function */\r\n/* eslint-disable import/extensions,react/jsx-no-undef */\r\nimport React, {\r\n  useState, useEffect, useCallback, createRef,\r\n} from 'react';\r\nimport UsersMetaHeaders from './components/UsersMetaHeaders.js';\r\nimport UsersMetaRow from './components/UsersMetaRow.js';\r\nimport { nameSpace, spinnerOff, spinnerOn } from './functions.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst restBase = 'user_fields';\r\nconst path = `${nameSpace}/${restBase}`;\r\n\r\nfunction TabUsersMeta() {\r\n  const [rows, setRows] = useState([]);\r\n  const [form, setForm] = useState([]);\r\n  const [resetPage, setResetPage] = useState(false);\r\n  const submitUsersButtonRef = createRef();\r\n  let read = [];\r\n  let write = [];\r\n  let del = [];\r\n  let finishedRead = false;\r\n  let finishedWrite = false;\r\n  let finishedDel = false;\r\n\r\n  /* Refresh the content of the meta rows after all read/write operations are finished */\r\n  function refreshPage() {\r\n    if (!finishedRead || !finishedWrite || !finishedDel) return;\r\n    const newUsersMeta = read.concat(write).concat(del);\r\n    const sortedUsers = newUsersMeta.sort((a, b) => {\r\n      if (a.index < b.index) return -1;\r\n      return 1;\r\n    });\r\n    setRows(sortedUsers);\r\n    setResetPage(true);\r\n    spinnerOff();\r\n  }\r\n\r\n  /* Makes the API request for the 'read' action */\r\n  function readData(dataToRead) {\r\n    if (dataToRead.length === 0) {\r\n      finishedRead = true;\r\n      return;\r\n    }\r\n\r\n    const readJSON = JSON.stringify(dataToRead);\r\n    finishedRead = false;\r\n\r\n    /* Launches the Rest request to read fields */\r\n    apiFetch({\r\n      path: `${path}?${restBase}=${readJSON}`,\r\n      method: 'GET',\r\n      parse: false,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedRead = true;\r\n        read = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Makes the API request for the 'write' action */\r\n  function writeData(dataToWrite) {\r\n    if (dataToWrite.length === 0) {\r\n      finishedWrite = true;\r\n      return;\r\n    }\r\n\r\n    const writeJSON = JSON.stringify(dataToWrite);\r\n    finishedWrite = false;\r\n    /* Launches the Rest request to write fields */\r\n    apiFetch({\r\n      path,\r\n      method: 'POST',\r\n      body: writeJSON,\r\n      parse: false,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedWrite = true;\r\n        write = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Makes the API request for the 'delete' action */\r\n  function deleteData(dataToDelete) {\r\n    if (dataToDelete.length === 0) {\r\n      finishedDel = true;\r\n      return;\r\n    }\r\n\r\n    const delJSON = JSON.stringify(dataToDelete);\r\n    finishedDel = false;\r\n\r\n    /* Launches the Rest request to delete fields */\r\n    apiFetch({\r\n      path,\r\n      method: 'DELETE',\r\n      body: delJSON,\r\n      parse: false,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((fields) => {\r\n        finishedDel = true;\r\n        del = fields;\r\n        refreshPage();\r\n      });\r\n  }\r\n\r\n  /* Called when the submit button is clicked. Launches the read, write and delete operations */\r\n  function submitUsersMeta(users) {\r\n    const readLocal = [];\r\n    const writeLocal = [];\r\n    const delLocal = [];\r\n    let newRead = {};\r\n    let newWrite = {};\r\n    let newDel = {};\r\n\r\n    users.forEach((user) => {\r\n      if (user.action === 'read') {\r\n        newRead = {\r\n          index: user.index,\r\n          userID: user.userID,\r\n          fieldName: user.fieldName,\r\n        };\r\n        readLocal.push(newRead);\r\n      } else if (user.action === 'write') {\r\n        newWrite = {\r\n          index: user.index,\r\n          userID: user.userID,\r\n          fieldName: user.fieldName,\r\n          emptyArray: user.emptyArray,\r\n          valueToWrite: user.valueToWrite,\r\n        };\r\n        writeLocal.push(newWrite);\r\n      } else if (user.action === 'delete') {\r\n        newDel = {\r\n          index: user.index,\r\n          userID: user.userID,\r\n          fieldName: user.fieldName,\r\n        };\r\n        delLocal.push(newDel);\r\n      }\r\n    });\r\n\r\n    spinnerOn();\r\n\r\n    finishedRead = false;\r\n    readData(readLocal);\r\n\r\n    finishedWrite = false;\r\n    writeData(writeLocal);\r\n\r\n    finishedDel = false;\r\n    deleteData(delLocal);\r\n  }\r\n\r\n  function requestSubmit(e) {\r\n    e.preventDefault();\r\n    submitUsersMeta(form);\r\n  }\r\n\r\n  /* Initializes the form at the first page load.\r\n  * Gets the array containing the previous options stored in the DB */\r\n  useEffect(() => {\r\n    const readJSON = JSON.stringify('all');\r\n\r\n    /* Launches the Rest request to read fields */\r\n    apiFetch({\r\n      path: `${path}?all_fields=${readJSON}`,\r\n      method: 'GET',\r\n      parse: false,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((metaFields) => {\r\n        const formTemp = [];\r\n        setRows(metaFields);\r\n        // eslint-disable-next-line array-callback-return\r\n        metaFields.map((row, index) => {\r\n          formTemp[index] = {\r\n            index: row.index,\r\n            userID: row.fieldID,\r\n            fieldName: row.fieldName,\r\n            emptyArray: '',\r\n            action: 'read',\r\n            valueToWrite: '',\r\n          };\r\n\r\n          if (!row.fieldID || !row.fieldName) {\r\n            row.disableWrite = true;\r\n            row.disableDelete = true;\r\n          }\r\n        });\r\n        setForm(formTemp);\r\n        // After we get the previous options from the DB we must refresh them to get their current value.\r\n        // The state variable 'form' is available only at the next refresh so in order to avoid passing an empty parameter\r\n        // now we have to pass the current variable\r\n        submitUsersMeta(formTemp);\r\n      });\r\n  }, []);\r\n\r\n  /* Called from downstream when the user manipulates the form fields.\r\n  * This form is what is sent to the server when the user clicks the 'read/write values' button */\r\n  const updateForm = useCallback((formRow) => {\r\n    const temp = {\r\n      index: formRow.index,\r\n      userID: formRow.fieldID,\r\n      fieldName: formRow.fieldName,\r\n      emptyArray: formRow.emptyArray,\r\n      action: formRow.action,\r\n      valueToWrite: formRow.valueToWrite,\r\n    };\r\n    const formTemp = form;\r\n    formTemp[formRow.rowIndex] = temp;\r\n    setForm(formTemp);\r\n  }, [form]);\r\n\r\n  /* Regenerates the form array when meta rows are added or removed */\r\n  function regenerateForm(newRows) {\r\n    const newForm = new Array(newRows.length);\r\n    newRows.forEach((row, index) => {\r\n      newForm[index] = {\r\n        index: row.index,\r\n        userID: row.fieldID,\r\n        fieldName: row.fieldName,\r\n        emptyArray: row.emptyArray,\r\n        action: row.action,\r\n        valueToWrite: row.valueToWrite,\r\n      };\r\n    });\r\n    setForm(newForm);\r\n  }\r\n\r\n  /* After a REST request is made to the backend, the state variable 'resetPage' restores */\r\n  function restoreEvent() {\r\n    setResetPage(false);\r\n  }\r\n\r\n  function addRemoveMetaRows(index, content) {\r\n    const updateBase = `${restBase}/update`;\r\n    const newPath = `${nameSpace}/${updateBase}`;\r\n\r\n    if (content === '+') {\r\n      const lastElement = rows[rows.length - 1];\r\n      const newIndex = parseInt(lastElement.index, 10) + 1;\r\n      const newRow = {\r\n        fieldID: 0,\r\n        fieldName: '',\r\n        index: newIndex,\r\n        currentValueDateToggle: 'is-hidden',\r\n        currentValue: JSON.stringify(''),\r\n        disableDelete: true,\r\n        disableWrite: true,\r\n        error: '',\r\n        previousValue: JSON.stringify(''),\r\n        rowErrorClass: '',\r\n      };\r\n      const addJSON = JSON.stringify(newIndex);\r\n      spinnerOn();\r\n      /* TODO submitOptionsButtonRef is empty: WHY??? */\r\n      // submitOptionsButtonRef.current.disabled = true;\r\n\r\n      /* Launches the Rest request to write fields */\r\n      apiFetch({\r\n        path: newPath,\r\n        method: 'POST',\r\n        body: addJSON,\r\n        parse: false,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((fields) => {\r\n          // submitOptionsButtonRef.current.disabled = false;\r\n          // submitOptionsButtonRef.current.blur();\r\n          spinnerOff();\r\n          if (!fields.error) {\r\n            setRows([...rows, newRow]);\r\n            regenerateForm([...rows, newRow]);\r\n          }\r\n        });\r\n    } else {\r\n      // Remove the selected row from the array\r\n      const rowIndex = rows.findIndex((row) => row.index === parseInt(index, 10));\r\n      rows.splice(rowIndex, 1);\r\n\r\n      const removeJSON = JSON.stringify(rows);\r\n      spinnerOn();\r\n      // submitUserButton.disabled = true;\r\n\r\n      /* Launches the Rest request to write fields */\r\n      apiFetch({\r\n        path: newPath,\r\n        method: 'DELETE',\r\n        body: removeJSON,\r\n        parse: false,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((fields) => {\r\n        // submitUserButton.disabled = false;\r\n        // submitUserButton.blur();\r\n          spinnerOff();\r\n          if (!fields.error) {\r\n            setRows([...rows]);\r\n            regenerateForm(rows);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"js-userFieldsSection o-meta\">\r\n        <UsersMetaHeaders className=\"c-metaFieldsHeaders\" />\r\n        {rows.map((row, index) => {\r\n          let arrowTitle = 'Add another row';\r\n          let arrowContent = '+';\r\n          if (index + 1 < rows.length) {\r\n            arrowTitle = 'Remove the next row';\r\n            arrowContent = '-';\r\n          }\r\n          return (\r\n            <UsersMetaRow\r\n              className=\"js-userFieldsDataRow c-metaField\"\r\n              rowIndex={index}\r\n              dataIndex={row.index}\r\n              fieldID={row.fieldID}\r\n              fieldName={row.fieldName}\r\n              errorClass={row.rowErrorClass}\r\n              errorMessage={row.error}\r\n              currentValue={JSON.parse(row.currentValue)}\r\n              previousValue={JSON.parse(row.previousValue)}\r\n              disableWrite={row.disableWrite}\r\n              disableDelete={row.disableDelete}\r\n              arrowTitle={arrowTitle}\r\n              arrowContent={arrowContent}\r\n              arrowClick={addRemoveMetaRows}\r\n              rowChange={updateForm}\r\n              resetPage={resetPage}\r\n              restoreEvent={restoreEvent}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <input\r\n        className=\"js-submitUserFields c-metaSubmitButton button button-primary\"\r\n        type=\"submit\"\r\n        name=\"submit_user_fields\"\r\n        value=\"Read/Write Values\"\r\n        ref={submitUsersButtonRef}\r\n        onClick={requestSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TabUsersMeta;\r\n","/* eslint-disable react/jsx-filename-extension,react/react-in-jsx-scope */\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\n/* eslint-disable import/extensions */\r\nimport TabOptionsMeta from './tab-options-meta.js';\r\nimport TabUsersMeta from './tab-users-meta.js';\r\nimport TabPostsMeta from './tab-posts-meta.js';\r\n\r\nrender(<TabOptionsMeta />, document.querySelector('#optionsMetaSection'));\r\nrender(<TabUsersMeta />, document.querySelector('#usersMetaSection'));\r\nrender(<TabPostsMeta />, document.querySelector('#postsMetaSection'));\r\n","/* eslint-disable function-paren-newline */\r\n// eslint-disable-next-line import/extensions\r\nimport { spinnerOn, spinnerOff, nameSpace } from './functions.js';\r\n// eslint-disable-next-line import/extensions\r\nimport { refreshUserArrows } from './add-remove-meta-row.js';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst { apiFetch } = wp;\r\n\r\nconst submitUserFieldsButton = document.querySelector('.js-submitUserFields');\r\nconst renameUserFieldsButton = document.querySelector('.js-submitRenameUserField');\r\nconst copyUserFieldsButton = document.querySelector('.js-submitCopyUserField');\r\nlet read = [];\r\nlet write = [];\r\nlet del = [];\r\nlet finishedWrite = false;\r\nlet finishedRead = false;\r\nlet finishedDel = false;\r\nconst restBase = 'user_fields';\r\nconst renameBase = `${restBase}/rename`;\r\nconst copyBase = `${restBase}/copy`;\r\nconst path = `${nameSpace}/${restBase}`;\r\n\r\n/* Get the fields whose action is selected to 'write' */\r\nfunction getWriteFields(row) {\r\n  const { index } = row.dataset;\r\n  const userID = row.querySelector(`input[name=\"user_id[${index}]\"]`).value;\r\n  const fieldName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n  const emptyArray = row.querySelector('.js-emptyArray').checked;\r\n  const valueToWrite = row.querySelector('.js-metaFieldInputValue').value;\r\n\r\n  const newValue = {\r\n    index,\r\n    userID,\r\n    fieldName,\r\n    emptyArray,\r\n    valueToWrite,\r\n  };\r\n\r\n  write.push(newValue);\r\n}\r\n\r\n/* Get the fields whose action is selected to 'delete' */\r\nfunction getDeleteFields(row) {\r\n  const { index } = row.dataset;\r\n  const userID = row.querySelector(`input[name=\"user_id[${index}]\"]`).value;\r\n  const fieldName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n\r\n  const newValue = {\r\n    index,\r\n    userID,\r\n    fieldName,\r\n  };\r\n\r\n  del.push(newValue);\r\n}\r\n\r\n/* Get the fields whose action is selected to 'read' */\r\nfunction readFields(row) {\r\n  const { index } = row.dataset;\r\n  const userID = row.querySelector(`input[name=\"user_id[${index}]\"]`).value;\r\n  const fieldName = row.querySelector(`input[name=\"field_name[${index}]\"]`).value;\r\n\r\n  const newValue = {\r\n    index,\r\n    userID,\r\n    fieldName,\r\n  };\r\n\r\n  read.push(newValue);\r\n}\r\n\r\n/* Refresh the page of the meta fields with the data received */\r\nfunction refreshPage(fields) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const field of fields) {\r\n    const { index } = field;\r\n    const row = document.querySelector(`.js-userFieldsDataRow[data-index=\"${index}\"]`);\r\n    // add/remove the red-dotted border\r\n    if (field.error === '') {\r\n      row.classList.remove('is-error');\r\n    } else {\r\n      row.classList.add('is-error');\r\n    }\r\n\r\n    row.querySelector('.js-fieldAction[value=\"read\"]').click();\r\n\r\n    row.querySelector(\r\n      '.js-fieldAction[value=\"write\"]').disabled = field.disableWrite\r\n      === 'disabled';\r\n\r\n    if (field.disableDelete === 'disabled') {\r\n      row.querySelector('.js-fieldAction[value=\"delete\"]').disabled = true;\r\n    } else {\r\n      row.querySelector('.js-fieldAction[value=\"delete\"]').disabled = false;\r\n    }\r\n\r\n    // manages the error message\r\n    const fieldErrorMessage = row.querySelector('.js-fieldErrorMessage');\r\n    if (field.fieldErrorClass === '') {\r\n      fieldErrorMessage.classList.add('is-hidden');\r\n    } else {\r\n      fieldErrorMessage.classList.remove('is-hidden');\r\n      fieldErrorMessage.innerHTML = field.error;\r\n    }\r\n\r\n    // manages the empty array checkbox\r\n    const emptyArrayCheckbox = row.querySelector('.js-emptyArray');\r\n    emptyArrayCheckbox.checked = false;\r\n    emptyArrayCheckbox.disabled = true;\r\n\r\n    // manages the date string checkbox\r\n    const dateStringCheckbox = row.querySelector('.js-dateString');\r\n    dateStringCheckbox.checked = false;\r\n    dateStringCheckbox.disabled = true;\r\n\r\n    // input value box\r\n    const metaFieldInputValue = row.querySelector('.js-metaFieldInputValue');\r\n    metaFieldInputValue.value = '';\r\n    metaFieldInputValue.disabled = true;\r\n\r\n    // Current value\r\n    const fieldCurrentValue = row.querySelector('.js-fieldCurrentValue');\r\n    fieldCurrentValue.innerHTML = JSON.parse(field.currentValue);\r\n\r\n    // Current value date-string option\r\n    const currentValueDateToggle = row.querySelector('.js-curValueDateToggle');\r\n    if (field.curValueDateToggle === 'is-visible') {\r\n      currentValueDateToggle.classList.add('is-visible');\r\n      currentValueDateToggle.classList.remove('is-hidden');\r\n    } else {\r\n      currentValueDateToggle.classList.remove('is-visible');\r\n      currentValueDateToggle.classList.add('is-hidden');\r\n    }\r\n\r\n    // Previous value\r\n    const fieldPreviousValue = row.querySelector('.js-fieldPreviousValue');\r\n    fieldPreviousValue.innerHTML = JSON.parse(field.previousValue);\r\n  }\r\n\r\n  if (finishedWrite && finishedRead && finishedDel) {\r\n    submitUserFieldsButton.disabled = false;\r\n    submitUserFieldsButton.blur();\r\n\r\n    refreshUserArrows();\r\n\r\n    spinnerOff();\r\n    finishedWrite = false;\r\n    finishedRead = false;\r\n    finishedDel = false;\r\n  }\r\n}\r\n\r\n/* Makes the API request for the 'read' action */\r\nfunction readData() {\r\n  if (read.length === 0) {\r\n    finishedRead = true;\r\n    return;\r\n  }\r\n\r\n  const readJSON = JSON.stringify(read);\r\n  finishedRead = false;\r\n\r\n  /* Launches the Rest request to read fields */\r\n  apiFetch({\r\n    path: `${path}?user_fields=${readJSON}`,\r\n    method: 'GET',\r\n    parse: false,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedRead = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Makes the API request for the 'write' action */\r\nfunction writeData() {\r\n  if (write.length === 0) {\r\n    finishedWrite = true;\r\n    return;\r\n  }\r\n\r\n  const writeJSON = JSON.stringify(write);\r\n  finishedWrite = false;\r\n\r\n  /* Launches the Rest request to write fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'POST',\r\n    body: writeJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedWrite = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Makes the API request for the 'delete' action */\r\nfunction deleteData() {\r\n  if (del.length === 0) {\r\n    finishedDel = true;\r\n    return;\r\n  }\r\n\r\n  const delJSON = JSON.stringify(del);\r\n  finishedDel = false;\r\n\r\n  /* Launches the Rest request to delete fields */\r\n  apiFetch({\r\n    path,\r\n    method: 'DELETE',\r\n    body: delJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      finishedDel = true;\r\n      refreshPage(fields);\r\n    });\r\n}\r\n\r\n/* Gets the content of the form for the 'read|write|delete' actions */\r\nfunction getMetaForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  submitUserFieldsButton.disabled = true;\r\n\r\n  write = [];\r\n  read = [];\r\n  del = [];\r\n\r\n  const rows = document.querySelectorAll('.js-userFieldsDataRow');\r\n\r\n  /* Reads all the rows and fill in the request objects */\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const row of rows) {\r\n    const fieldAction = row.querySelector('.js-fieldAction:checked').value;\r\n\r\n    if (fieldAction === 'write') {\r\n      getWriteFields(row);\r\n    }\r\n\r\n    if (fieldAction === 'delete') {\r\n      getDeleteFields(row);\r\n    }\r\n\r\n    if (fieldAction === 'read') {\r\n      readFields(row);\r\n    }\r\n  }\r\n\r\n  /* Once all the rows have been read, launches the actions */\r\n  readData();\r\n  writeData();\r\n  deleteData();\r\n}\r\n\r\n/* Refresh the rename section if the action has been completed successfully */\r\nfunction refreshRenamePage(fields) {\r\n  let lightbox;\r\n\r\n  const userID = document.querySelector('.js-userFieldRenameUserID');\r\n  const oldFieldName = document.querySelector('.js-oldUserFieldName');\r\n  const newFieldName = document.querySelector('.js-newUserFieldName');\r\n\r\n  if (!fields.renamed) {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'jelly',\r\n      closeAnimation: 'collapse',\r\n    });\r\n    lightbox.setTitle('ERROR');\r\n  } else {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'fadein',\r\n      closeAnimation: 'shrink',\r\n    });\r\n    lightbox.setTitle('Done');\r\n    // eslint-disable-next-line no-param-reassign\r\n    userID.value = '';\r\n    // eslint-disable-next-line no-param-reassign\r\n    oldFieldName.value = '';\r\n    // eslint-disable-next-line no-param-reassign\r\n    newFieldName.value = '';\r\n  }\r\n\r\n  lightbox.setContent(fields.message);\r\n\r\n  lightbox.open();\r\n\r\n  spinnerOff();\r\n  renameUserFieldsButton.disabled = false;\r\n}\r\n\r\n/* Gets the content of the form for the 'rename' action */\r\nfunction getRenameForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  renameUserFieldsButton.disabled = true;\r\n\r\n  const userID = document.querySelector('.js-userFieldRenameUserID').value;\r\n  const oldFieldName = document.querySelector('.js-oldUserFieldName').value;\r\n  const newFieldName = document.querySelector('.js-newUserFieldName').value;\r\n\r\n  /* Prepares the object for the Rest request */\r\n  const rename = {\r\n    userID,\r\n    oldFieldName,\r\n    newFieldName,\r\n  };\r\n\r\n  const renameJSON = JSON.stringify(rename);\r\n\r\n  /* Launches the Rest request to rename fields */\r\n  apiFetch({\r\n    path: `${nameSpace}/${renameBase}`,\r\n    method: 'POST',\r\n    body: renameJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      refreshRenamePage(fields);\r\n    });\r\n}\r\n\r\n/* Refresh the copy section if the action has been completed successfully */\r\nfunction refreshCopyPage(fields, copySelection) {\r\n  let checkboxCreate;\r\n  let newOption;\r\n  let userID;\r\n  let userField;\r\n  let postID;\r\n  let postField;\r\n  let lightbox;\r\n\r\n  const currentUserID = document.querySelector('.js-userFieldCopyUserID');\r\n  const currentUserField = document.querySelector('.js-userFieldCopyFieldName');\r\n\r\n  if (fields.copied) {\r\n    currentUserID.value = '';\r\n    currentUserField.value = '';\r\n\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'fadein',\r\n      closeAnimation: 'shrink',\r\n    });\r\n    lightbox.setTitle('Done');\r\n\r\n    switch (copySelection) {\r\n      case 'option':\r\n        newOption = document.querySelector('.js-userFieldToOptionName');\r\n        checkboxCreate = document.querySelector('.js-userFieldToOptionCreate');\r\n        newOption.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      case 'user field':\r\n        userID = document.querySelector('.js-userFieldToUserFieldID');\r\n        userField = document.querySelector('.js-userFieldToUserFieldName');\r\n        checkboxCreate = document.querySelector('.js-userFieldToUserFieldCreate');\r\n        userID.value = '';\r\n        userField.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      case 'post field':\r\n        postID = document.querySelector('.js-userFieldToPostFieldID');\r\n        postField = document.querySelector('.js-userFieldToPostFieldName');\r\n        checkboxCreate = document.querySelector('.js-userFieldToPostFieldCreate');\r\n        postID.value = '';\r\n        postField.value = '';\r\n        checkboxCreate.checked = false;\r\n        break;\r\n      default:\r\n    }\r\n  } else {\r\n    lightbox = new Lightbox({\r\n      openAnimation: 'jelly',\r\n      closeAnimation: 'collapse',\r\n    });\r\n    lightbox.setTitle('ERROR');\r\n  }\r\n  lightbox.setContent(fields.message);\r\n\r\n  lightbox.open();\r\n\r\n  spinnerOff();\r\n  copyUserFieldsButton.disabled = false;\r\n}\r\n\r\n/* Gets the content of the form for the 'copy' action */\r\nfunction getCopyForm(e) {\r\n  e.preventDefault();\r\n  spinnerOn();\r\n  copyUserFieldsButton.disabled = true;\r\n\r\n  let copy;\r\n  let checkboxCreate;\r\n  let newOption;\r\n  let userID;\r\n  let userField;\r\n  let postID;\r\n  let postField;\r\n\r\n  const currentUserID = document.querySelector('.js-userFieldCopyUserID').value;\r\n  const currentFieldName = document.querySelector('.js-userFieldCopyFieldName').value;\r\n  const copySelection = document.querySelector('input[type=radio][name=copy_user_field_to]:checked').value;\r\n\r\n  /* Checks where we must copy the user field to and prepares the appropriate object for the Rest request */\r\n  switch (copySelection) {\r\n    case 'option':\r\n      newOption = document.querySelector('.js-userFieldToOptionName').value;\r\n      checkboxCreate = document.querySelector('.js-userFieldToOptionCreate').checked;\r\n      copy = {\r\n        currentUserID,\r\n        currentFieldName,\r\n        copySelection,\r\n        newOption,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    case 'user field':\r\n      userID = document.querySelector('.js-userFieldToUserFieldID').value;\r\n      userField = document.querySelector('.js-userFieldToUserFieldName').value;\r\n      checkboxCreate = document.querySelector('.js-userFieldToUserFieldCreate').checked;\r\n      copy = {\r\n        currentUserID,\r\n        currentFieldName,\r\n        copySelection,\r\n        userID,\r\n        userField,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    case 'post field':\r\n      postID = document.querySelector('.js-userFieldToPostFieldID').value;\r\n      postField = document.querySelector('.js-userFieldToPostFieldName').value;\r\n      checkboxCreate = document.querySelector('.js-userFieldToPostFieldCreate').checked;\r\n      copy = {\r\n        currentUserID,\r\n        currentFieldName,\r\n        copySelection,\r\n        postID,\r\n        postField,\r\n        checkboxCreate,\r\n      };\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const copyJSON = JSON.stringify(copy);\r\n\r\n  /* Launches the Rest request to copy fields */\r\n  apiFetch({\r\n    path: `${nameSpace}/${copyBase}`,\r\n    method: 'POST',\r\n    body: copyJSON,\r\n    parse: false,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((fields) => {\r\n      refreshCopyPage(fields, copySelection);\r\n    });\r\n}\r\n\r\n// submitUserFieldsButton.addEventListener('click', getMetaForm, false);\r\nrenameUserFieldsButton.addEventListener('click', getRenameForm, false);\r\ncopyUserFieldsButton.addEventListener('click', getCopyForm, true);\r\n","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}